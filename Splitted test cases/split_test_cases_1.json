[
    {
        "input": {
            "name": "Get User Profile",
            "method": "GET",
            "url": "https://api.example.com/v1/users/{user_id}",
            "params": [
                {
                    "key": "include_details",
                    "value": "true"
                }
            ],
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer token123"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve user with valid ID",
                "description": "Verify that a user profile can be retrieved with a valid user ID",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer token123"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/users/123?include_details=true",
                "expected_status": true
            },
            {
                "test_case_name": "User not found with invalid ID",
                "description": "Verify that the API returns an error when requesting a non-existent user",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer token123"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/users/999999?include_details=true",
                "expected_status": false
            },
            {
                "test_case_name": "Unauthorized access attempt",
                "description": "Verify that the API returns an error when authorization token is invalid",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer invalid_token"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/users/123?include_details=true",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Create Product",
            "method": "POST",
            "url": "https://api.example.com/v1/products",
            "body": {
                "name": "Smartphone",
                "price": 499.99,
                "description": "Latest model smartphone",
                "category": "electronics",
                "inventory": 100
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create product with valid data",
                "description": "Verify that a product can be created when all required fields are provided",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/products",
                "body": {
                    "name": "Smartphone",
                    "price": 499.99,
                    "description": "Latest model smartphone",
                    "category": "electronics",
                    "inventory": 100
                },
                "expected_status": true
            },
            {
                "test_case_name": "Missing required field",
                "description": "Verify that the API returns an error when the required 'price' field is missing",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/products",
                "body": {
                    "name": "Smartphone",
                    "description": "Latest model smartphone",
                    "category": "electronics",
                    "inventory": 100
                },
                "expected_status": false
            },
            {
                "test_case_name": "Invalid price format",
                "description": "Verify that the API validates the price format correctly",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/products",
                "body": {
                    "name": "Smartphone",
                    "price": "free",
                    "description": "Latest model smartphone",
                    "category": "electronics",
                    "inventory": 100
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Update Order Status",
            "method": "PUT",
            "url": "https://api.example.com/v1/orders/{order_id}/status",
            "body": {
                "status": "shipped",
                "tracking_number": "TRK123456789",
                "carrier": "FedEx"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer staff_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully update order status",
                "description": "Verify that an order status can be updated with valid information",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer staff_token"
                    }
                ],
                "url": "https://api.example.com/v1/orders/ORD-12345/status",
                "body": {
                    "status": "shipped",
                    "tracking_number": "TRK123456789",
                    "carrier": "FedEx"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Invalid order status value",
                "description": "Verify that the API returns an error when providing an invalid status value",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer staff_token"
                    }
                ],
                "url": "https://api.example.com/v1/orders/ORD-12345/status",
                "body": {
                    "status": "teleported",
                    "tracking_number": "TRK123456789",
                    "carrier": "FedEx"
                },
                "expected_status": false
            },
            {
                "test_case_name": "Order not found",
                "description": "Verify that the API returns an error when the order ID doesn't exist",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer staff_token"
                    }
                ],
                "url": "https://api.example.com/v1/orders/NONEXISTENT/status",
                "body": {
                    "status": "shipped",
                    "tracking_number": "TRK123456789",
                    "carrier": "FedEx"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Delete Comment",
            "method": "DELETE",
            "url": "https://api.example.com/v1/comments/{comment_id}",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ],
            "params": [
                {
                    "key": "force",
                    "value": "true"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully delete own comment",
                "description": "Verify that a user can delete their own comment",
                "method": "DELETE",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/comments/456?force=true",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to delete another user's comment",
                "description": "Verify that a user cannot delete a comment they don't own",
                "method": "DELETE",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/comments/789?force=true",
                "expected_status": false
            },
            {
                "test_case_name": "Delete with invalid comment ID format",
                "description": "Verify that the API returns an error when the comment ID format is invalid",
                "method": "DELETE",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/comments/invalid-id?force=true",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Search Products",
            "method": "GET",
            "url": "https://api.example.com/v1/products/search",
            "params": [
                {
                    "key": "query",
                    "value": "smartphone"
                },
                {
                    "key": "category",
                    "value": "electronics"
                },
                {
                    "key": "min_price",
                    "value": "200"
                },
                {
                    "key": "max_price",
                    "value": "800"
                },
                {
                    "key": "sort",
                    "value": "price_asc"
                },
                {
                    "key": "limit",
                    "value": "20"
                },
                {
                    "key": "page",
                    "value": "1"
                }
            ],
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Search with all valid parameters",
                "description": "Verify that the search works with all parameters specified",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/search?query=smartphone&category=electronics&min_price=200&max_price=800&sort=price_asc&limit=20&page=1",
                "expected_status": true
            },
            {
                "test_case_name": "Search with minimum parameters",
                "description": "Verify that the search works with only required parameters",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/search?query=smartphone",
                "expected_status": true
            },
            {
                "test_case_name": "Invalid price range",
                "description": "Verify that the API returns an error when min_price is greater than max_price",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/search?query=smartphone&min_price=900&max_price=800",
                "expected_status": false
            },
            {
                "test_case_name": "Pagination limits exceeded",
                "description": "Verify that the API validates pagination limits correctly",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/search?query=smartphone&limit=1000&page=0",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "User Registration",
            "method": "POST",
            "url": "https://api.example.com/v1/auth/register",
            "body": {
                "email": "newuser@example.com",
                "password": "SecureP@ss123",
                "first_name": "John",
                "last_name": "Doe",
                "birth_date": "1990-01-15"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successful user registration",
                "description": "Verify that a new user can be registered with valid information",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/auth/register",
                "body": {
                    "email": "newuser@example.com",
                    "password": "SecureP@ss123",
                    "first_name": "John",
                    "last_name": "Doe",
                    "birth_date": "1990-01-15"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Registration with existing email",
                "description": "Verify that the API returns an error when registering with an email that already exists",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/auth/register",
                "body": {
                    "email": "existing@example.com",
                    "password": "SecureP@ss123",
                    "first_name": "John",
                    "last_name": "Doe",
                    "birth_date": "1990-01-15"
                },
                "expected_status": false
            },
            {
                "test_case_name": "Registration with weak password",
                "description": "Verify that the API validates password strength requirements",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/auth/register",
                "body": {
                    "email": "newuser@example.com",
                    "password": "123456",
                    "first_name": "John",
                    "last_name": "Doe",
                    "birth_date": "1990-01-15"
                },
                "expected_status": false
            },
            {
                "test_case_name": "Registration with invalid email format",
                "description": "Verify that the API validates email format correctly",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/auth/register",
                "body": {
                    "email": "not-an-email",
                    "password": "SecureP@ss123",
                    "first_name": "John",
                    "last_name": "Doe",
                    "birth_date": "1990-01-15"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "User Login",
            "method": "POST",
            "url": "https://api.example.com/v1/auth/login",
            "body": {
                "email": "user@example.com",
                "password": "P@ssw0rd"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successful login with valid credentials",
                "description": "Verify that a user can log in with correct email and password",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/auth/login",
                "body": {
                    "email": "user@example.com",
                    "password": "P@ssw0rd"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Login with incorrect password",
                "description": "Verify that the API rejects login attempts with incorrect password",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/auth/login",
                "body": {
                    "email": "user@example.com",
                    "password": "WrongPassword"
                },
                "expected_status": false
            },
            {
                "test_case_name": "Login with non-existent email",
                "description": "Verify that the API rejects login attempts with email addresses that don't exist",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/auth/login",
                "body": {
                    "email": "nonexistent@example.com",
                    "password": "P@ssw0rd"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Password Reset Request",
            "method": "POST",
            "url": "https://api.example.com/v1/auth/password-reset",
            "body": {
                "email": "user@example.com"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully request password reset",
                "description": "Verify that a password reset email is sent to a valid user",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/auth/password-reset",
                "body": {
                    "email": "user@example.com"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Request password reset for non-existent email",
                "description": "Verify that the API handles password reset requests for non-existent users gracefully",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/auth/password-reset",
                "body": {
                    "email": "nonexistent@example.com"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Request with missing email field",
                "description": "Verify that the API returns an error when the email field is missing",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/auth/password-reset",
                "body": {},
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Order Details",
            "method": "GET",
            "url": "https://api.example.com/v1/orders/{order_id}",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer customer_token"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve order details",
                "description": "Verify that order details can be retrieved with a valid order ID",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/orders/ORD-12345",
                "expected_status": true
            },
            {
                "test_case_name": "Order not found",
                "description": "Verify that the API returns an error when the order ID doesn't exist",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/orders/NONEXISTENT",
                "expected_status": false
            },
            {
                "test_case_name": "Access order of another customer",
                "description": "Verify that a customer cannot access orders that belong to another customer",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/orders/ORD-67890",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Add Item to Cart",
            "method": "POST",
            "url": "https://api.example.com/v1/cart/items",
            "body": {
                "product_id": "PROD123",
                "quantity": 2,
                "options": {
                    "color": "black",
                    "size": "medium"
                }
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer customer_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully add item to cart",
                "description": "Verify that a product can be added to the user's cart",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "url": "https://api.example.com/v1/cart/items",
                "body": {
                    "product_id": "PROD123",
                    "quantity": 2,
                    "options": {
                        "color": "black",
                        "size": "medium"
                    }
                },
                "expected_status": true
            },
            {
                "test_case_name": "Add out-of-stock product",
                "description": "Verify that the API returns an error when adding an out-of-stock product",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "url": "https://api.example.com/v1/cart/items",
                "body": {
                    "product_id": "OUT_OF_STOCK",
                    "quantity": 1,
                    "options": {
                        "color": "red",
                        "size": "large"
                    }
                },
                "expected_status": false
            },
            {
                "test_case_name": "Add with invalid quantity",
                "description": "Verify that the API validates the quantity value correctly",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "url": "https://api.example.com/v1/cart/items",
                "body": {
                    "product_id": "PROD123",
                    "quantity": -1,
                    "options": {
                        "color": "black",
                        "size": "medium"
                    }
                },
                "expected_status": false
            },
            {
                "test_case_name": "Add with non-existent product ID",
                "description": "Verify that the API returns an error when adding a product that doesn't exist",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "url": "https://api.example.com/v1/cart/items",
                "body": {
                    "product_id": "NONEXISTENT",
                    "quantity": 1,
                    "options": {
                        "color": "black",
                        "size": "medium"
                    }
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Create Shipping Address",
            "method": "POST",
            "url": "https://api.example.com/v1/user/addresses",
            "body": {
                "name": "Home",
                "address_line1": "123 Main St",
                "address_line2": "Apt 4B",
                "city": "New York",
                "state": "NY",
                "postal_code": "10001",
                "country": "US",
                "is_default": true,
                "phone": "+1-212-555-1234"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer customer_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create shipping address",
                "description": "Verify that a shipping address can be created with valid information",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "url": "https://api.example.com/v1/user/addresses",
                "body": {
                    "name": "Home",
                    "address_line1": "123 Main St",
                    "address_line2": "Apt 4B",
                    "city": "New York",
                    "state": "NY",
                    "postal_code": "10001",
                    "country": "US",
                    "is_default": true,
                    "phone": "+1-212-555-1234"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Missing required fields",
                "description": "Verify that the API returns an error when required address fields are missing",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "url": "https://api.example.com/v1/user/addresses",
                "body": {
                    "name": "Home",
                    "address_line2": "Apt 4B",
                    "state": "NY",
                    "country": "US",
                    "is_default": true
                },
                "expected_status": false
            },
            {
                "test_case_name": "Invalid country code",
                "description": "Verify that the API validates country codes correctly",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "url": "https://api.example.com/v1/user/addresses",
                "body": {
                    "name": "Home",
                    "address_line1": "123 Main St",
                    "address_line2": "Apt 4B",
                    "city": "New York",
                    "state": "NY",
                    "postal_code": "10001",
                    "country": "XX",
                    "is_default": true,
                    "phone": "+1-212-555-1234"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Upload Product Image",
            "method": "POST",
            "url": "https://api.example.com/v1/products/{product_id}/images",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                },
                {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully upload image",
                "description": "Verify that an image can be uploaded for a product",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    },
                    {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                    }
                ],
                "url": "https://api.example.com/v1/products/PROD123/images",
                "expected_status": true
            },
            {
                "test_case_name": "Upload for non-existent product",
                "description": "Verify that the API returns an error when uploading an image for a product that doesn't exist",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    },
                    {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                    }
                ],
                "url": "https://api.example.com/v1/products/NONEXISTENT/images",
                "expected_status": false
            },
            {
                "test_case_name": "Upload with invalid file type",
                "description": "Verify that the API validates image file types correctly",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    },
                    {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                    }
                ],
                "url": "https://api.example.com/v1/products/PROD123/images",
                "expected_status": false
            },
            {
                "test_case_name": "Upload with file exceeding size limit",
                "description": "Verify that the API validates image file size correctly",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    },
                    {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                    }
                ],
                "url": "https://api.example.com/v1/products/PROD123/images",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Create Category",
            "method": "POST",
            "url": "https://api.example.com/v1/categories",
            "body": {
                "name": "Smart Home",
                "description": "Smart home devices and automation systems",
                "parent_id": "electronics",
                "is_active": true,
                "display_order": 5
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create category",
                "description": "Verify that a product category can be created with valid information",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/categories",
                "body": {
                    "name": "Smart Home",
                    "description": "Smart home devices and automation systems",
                    "parent_id": "electronics",
                    "is_active": true,
                    "display_order": 5
                },
                "expected_status": true
            },
            {
                "test_case_name": "Create category with duplicate name",
                "description": "Verify that the API returns an error when creating a category with a name that already exists",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/categories",
                "body": {
                    "name": "Electronics",
                    "description": "Electronic devices and accessories",
                    "is_active": true,
                    "display_order": 3
                },
                "expected_status": false
            },
            {
                "test_case_name": "Create category with non-existent parent",
                "description": "Verify that the API returns an error when the parent category doesn't exist",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/categories",
                "body": {
                    "name": "Smart Home",
                    "description": "Smart home devices and automation systems",
                    "parent_id": "nonexistent_category",
                    "is_active": true,
                    "display_order": 5
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Submit Review",
            "method": "POST",
            "url": "https://api.example.com/v1/products/{product_id}/reviews",
            "body": {
                "rating": 4,
                "title": "Great product with minor issues",
                "content": "This product works great for my needs, but had a few minor issues with setup.",
                "recommend": true,
                "purchase_verified": true
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer customer_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully submit review",
                "description": "Verify that a customer can submit a product review",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "url": "https://api.example.com/v1/products/PROD123/reviews",
                "body": {
                    "rating": 4,
                    "title": "Great product with minor issues",
                    "content": "This product works great for my needs, but had a few minor issues with setup.",
                    "recommend": true,
                    "purchase_verified": true
                },
                "expected_status": true
            },
            {
                "test_case_name": "Submit review for non-existent product",
                "description": "Verify that the API returns an error when submitting a review for a product that doesn't exist",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "url": "https://api.example.com/v1/products/NONEXISTENT/reviews",
                "body": {
                    "rating": 4,
                    "title": "Great product with minor issues",
                    "content": "This product works great for my needs, but had a few minor issues with setup.",
                    "recommend": true,
                    "purchase_verified": true
                },
                "expected_status": false
            },
            {
                "test_case_name": "Submit review with invalid rating",
                "description": "Verify that the API validates rating values correctly",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "url": "https://api.example.com/v1/products/PROD123/reviews",
                "body": {
                    "rating": 6,
                    "title": "Great product with minor issues",
                    "content": "This product works great for my needs, but had a few minor issues with setup.",
                    "recommend": true,
                    "purchase_verified": true
                },
                "expected_status": false
            },
            {
                "test_case_name": "Submit duplicate review",
                "description": "Verify that the API prevents a customer from submitting multiple reviews for the same product",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "url": "https://api.example.com/v1/products/ALREADY_REVIEWED/reviews",
                "body": {
                    "rating": 2,
                    "title": "Changed my mind",
                    "content": "I don't like it anymore",
                    "recommend": false,
                    "purchase_verified": true
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Create Wishlist",
            "method": "POST",
            "url": "https://api.example.com/v1/wishlists",
            "body": {
                "name": "Birthday Ideas",
                "description": "Gift ideas for my upcoming birthday",
                "is_public": false
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer customer_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create wishlist",
                "description": "Verify that a customer can create a new wishlist",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "url": "https://api.example.com/v1/wishlists",
                "body": {
                    "name": "Birthday Ideas",
                    "description": "Gift ideas for my upcoming birthday",
                    "is_public": false
                },
                "expected_status": true
            },
            {
                "test_case_name": "Create wishlist with duplicate name",
                "description": "Verify that the API returns an error when creating a wishlist with a name that already exists for the user",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "url": "https://api.example.com/v1/wishlists",
                "body": {
                    "name": "Favorites",
                    "description": "My favorite products",
                    "is_public": true
                },
                "expected_status": false
            },
            {
                "test_case_name": "Create wishlist without authentication",
                "description": "Verify that the API requires authentication for creating wishlists",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/wishlists",
                "body": {
                    "name": "Birthday Ideas",
                    "description": "Gift ideas for my upcoming birthday",
                    "is_public": false
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Add Item to Wishlist",
            "method": "POST",
            "url": "https://api.example.com/v1/wishlists/{wishlist_id}/items",
            "body": {
                "product_id": "PROD456",
                "note": "I really want this in red!"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer customer_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully add item to wishlist",
                "description": "Verify that a product can be added to a wishlist",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "url": "https://api.example.com/v1/wishlists/WISHLIST123/items",
                "body": {
                    "product_id": "PROD456",
                    "note": "I really want this in red!"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Add item to non-existent wishlist",
                "description": "Verify that the API returns an error when adding to a wishlist that doesn't exist",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "url": "https://api.example.com/v1/wishlists/NONEXISTENT/items",
                "body": {
                    "product_id": "PROD456",
                    "note": "I really want this in red!"
                },
                "expected_status": false
            },
            {
                "test_case_name": "Add non-existent product",
                "description": "Verify that the API returns an error when adding a product that doesn't exist",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "url": "https://api.example.com/v1/wishlists/WISHLIST123/items",
                "body": {
                    "product_id": "NONEXISTENT",
                    "note": "I really want this in red!"
                },
                "expected_status": false
            },
            {
                "test_case_name": "Add duplicate item to wishlist",
                "description": "Verify that the API handles adding a product that's already in the wishlist",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "url": "https://api.example.com/v1/wishlists/WISHLIST123/items",
                "body": {
                    "product_id": "ALREADY_IN_WISHLIST",
                    "note": "I still really want this!"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Create Coupon",
            "method": "POST",
            "url": "https://api.example.com/v1/coupons",
            "body": {
                "code": "SUMMER25",
                "type": "percentage",
                "value": 25,
                "min_purchase": 100,
                "start_date": "2023-06-01T00:00:00Z",
                "end_date": "2023-08-31T23:59:59Z",
                "max_uses": 1000,
                "is_active": true
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create coupon",
                "description": "Verify that a coupon can be created with valid information",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/coupons",
                "body": {
                    "code": "SUMMER25",
                    "type": "percentage",
                    "value": 25,
                    "min_purchase": 100,
                    "start_date": "2023-06-01T00:00:00Z",
                    "end_date": "2023-08-31T23:59:59Z",
                    "max_uses": 1000,
                    "is_active": true
                },
                "expected_status": true
            },
            {
                "test_case_name": "Create coupon with duplicate code",
                "description": "Verify that the API returns an error when creating a coupon with a code that already exists",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/coupons",
                "body": {
                    "code": "WELCOME10",
                    "type": "percentage",
                    "value": 10,
                    "min_purchase": 50,
                    "start_date": "2023-01-01T00:00:00Z",
                    "end_date": "2023-12-31T23:59:59Z",
                    "max_uses": 2000,
                    "is_active": true
                },
                "expected_status": false
            },
            {
                "test_case_name": "Create coupon with invalid dates",
                "description": "Verify that the API returns an error when the end date is before the start date",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/coupons",
                "body": {
                    "code": "INVALID_DATES",
                    "type": "percentage",
                    "value": 15,
                    "min_purchase": 75,
                    "start_date": "2023-12-01T00:00:00Z",
                    "end_date": "2023-06-30T23:59:59Z",
                    "max_uses": 500,
                    "is_active": true
                },
                "expected_status": false
            },
            {
                "test_case_name": "Create coupon with invalid value",
                "description": "Verify that the API validates percentage discount values correctly",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/coupons",
                "body": {
                    "code": "INVALID_VALUE",
                    "type": "percentage",
                    "value": 110,
                    "min_purchase": 50,
                    "start_date": "2023-06-01T00:00:00Z",
                    "end_date": "2023-08-31T23:59:59Z",
                    "max_uses": 1000,
                    "is_active": true
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Apply Coupon",
            "method": "POST",
            "url": "https://api.example.com/v1/cart/coupon",
            "body": {
                "code": "SUMMER25"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer customer_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully apply valid coupon",
                "description": "Verify that a valid coupon can be applied to the cart",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "url": "https://api.example.com/v1/cart/coupon",
                "body": {
                    "code": "SUMMER25"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Apply non-existent coupon",
                "description": "Verify that the API returns an error when applying a coupon that doesn't exist",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "url": "https://api.example.com/v1/cart/coupon",
                "body": {
                    "code": "NONEXISTENT"
                },
                "expected_status": false
            },
            {
                "test_case_name": "Apply expired coupon",
                "description": "Verify that the API returns an error when applying an expired coupon",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "url": "https://api.example.com/v1/cart/coupon",
                "body": {
                    "code": "EXPIRED"
                },
                "expected_status": false
            },
            {
                "test_case_name": "Apply coupon below minimum purchase",
                "description": "Verify that the API returns an error when the cart total is below the coupon's minimum purchase requirement",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "url": "https://api.example.com/v1/cart/coupon",
                "body": {
                    "code": "MIN_PURCHASE_REQUIRED"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Create Subscription",
            "method": "POST",
            "url": "https://api.example.com/v1/subscriptions",
            "body": {
                "plan_id": "PREMIUM",
                "payment_method_id": "pm_123456",
                "billing_cycle": "monthly",
                "auto_renew": true,
                "coupon_code": "FIRSTMONTH"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer customer_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create subscription",
                "description": "Verify that a subscription can be created with valid information",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "url": "https://api.example.com/v1/subscriptions",
                "body": {
                    "plan_id": "PREMIUM",
                    "payment_method_id": "pm_123456",
                    "billing_cycle": "monthly",
                    "auto_renew": true,
                    "coupon_code": "FIRSTMONTH"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Create subscription with invalid plan",
                "description": "Verify that the API returns an error when the subscription plan doesn't exist",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "url": "https://api.example.com/v1/subscriptions",
                "body": {
                    "plan_id": "NONEXISTENT",
                    "payment_method_id": "pm_123456",
                    "billing_cycle": "monthly",
                    "auto_renew": true
                },
                "expected_status": false
            },
            {
                "test_case_name": "Create subscription with invalid payment method",
                "description": "Verify that the API returns an error when the payment method is invalid",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "url": "https://api.example.com/v1/subscriptions",
                "body": {
                    "plan_id": "PREMIUM",
                    "payment_method_id": "invalid_payment",
                    "billing_cycle": "monthly",
                    "auto_renew": true
                },
                "expected_status": false
            },
            {
                "test_case_name": "Create duplicate subscription",
                "description": "Verify that the API handles attempts to create duplicate subscriptions for the same plan",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "url": "https://api.example.com/v1/subscriptions",
                "body": {
                    "plan_id": "ALREADY_SUBSCRIBED",
                    "payment_method_id": "pm_123456",
                    "billing_cycle": "monthly",
                    "auto_renew": true
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Retrieve User Profile",
            "method": "GET",
            "url": "https://api.example.com/v1/users/USER0",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ],
            "params": [
                {
                    "key": "include_details",
                    "value": "true"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Valid user ID",
                "description": "Testing: Valid user ID",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/USER0",
                "expected_status": true
            },
            {
                "test_case_name": "User not found",
                "description": "Testing: User not found",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/USER0",
                "expected_status": false
            },
            {
                "test_case_name": "Unauthorized request",
                "description": "Testing: Unauthorized request",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/USER0",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Update User Email",
            "method": "PUT",
            "url": "https://api.example.com/v1/users/USER1/email",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ],
            "body": {
                "new_email": "user@example.com"
            }
        },
        "output": [
            {
                "test_case_name": "Valid email update",
                "description": "Testing: Valid email update",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/USER1/email",
                "expected_status": true
            },
            {
                "test_case_name": "Invalid email format",
                "description": "Testing: Invalid email format",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/USER1/email",
                "expected_status": false
            },
            {
                "test_case_name": "Unauthorized update",
                "description": "Testing: Unauthorized update",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/USER1/email",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Fetch Transaction History",
            "method": "GET",
            "url": "https://api.example.com/v1/users/USER2/transactions",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ],
            "params": [
                {
                    "key": "limit",
                    "value": "10"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Fetch recent transactions",
                "description": "Testing: Fetch recent transactions",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/USER2/transactions",
                "expected_status": true
            },
            {
                "test_case_name": "No transactions found",
                "description": "Testing: No transactions found",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/USER2/transactions",
                "expected_status": true
            },
            {
                "test_case_name": "Unauthorized request",
                "description": "Testing: Unauthorized request",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/USER2/transactions",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Create New Order",
            "method": "POST",
            "url": "https://api.example.com/v1/orders",
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                }
            ],
            "body": {
                "product_id": "PROD123",
                "quantity": 2
            }
        },
        "output": [
            {
                "test_case_name": "Successful order placement",
                "description": "Testing: Successful order placement",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/orders",
                "expected_status": true
            },
            {
                "test_case_name": "Product out of stock",
                "description": "Testing: Product out of stock",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/orders",
                "expected_status": false
            },
            {
                "test_case_name": "Invalid product ID",
                "description": "Testing: Invalid product ID",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/orders",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Verify Discount Code",
            "method": "POST",
            "url": "https://api.example.com/v1/discounts/verify",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ],
            "body": {
                "code": "DISCOUNT50"
            }
        },
        "output": [
            {
                "test_case_name": "Valid discount code",
                "description": "Testing: Valid discount code",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/discounts/verify",
                "expected_status": true
            },
            {
                "test_case_name": "Expired discount code",
                "description": "Testing: Expired discount code",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/discounts/verify",
                "expected_status": false
            },
            {
                "test_case_name": "Invalid discount code",
                "description": "Testing: Invalid discount code",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/discounts/verify",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Process Refund",
            "method": "POST",
            "url": "https://api.example.com/v1/orders/ORD5/refund",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ],
            "body": {
                "reason": "Defective product"
            }
        },
        "output": [
            {
                "test_case_name": "Successful refund",
                "description": "Testing: Successful refund",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/orders/ORD5/refund",
                "expected_status": true
            },
            {
                "test_case_name": "Refund request denied",
                "description": "Testing: Refund request denied",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/orders/ORD5/refund",
                "expected_status": false
            },
            {
                "test_case_name": "Unauthorized refund attempt",
                "description": "Testing: Unauthorized refund attempt",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/orders/ORD5/refund",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Server Status",
            "method": "GET",
            "url": "https://api.example.com/v1/status",
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Server returns operational status",
                "description": "Verify that the server returns an 'operational' status when healthy.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/status",
                "expected_status": true,
                "expected_response": {
                    "status": "operational",
                    "timestamp": "2025-03-01T21:00:00Z"
                }
            },
            {
                "test_case_name": "Server returns maintenance status",
                "description": "Verify the server returns a 'maintenance' status with a message during scheduled downtime.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/status",
                "expected_status": true,
                "expected_response": {
                    "status": "maintenance",
                    "message": "Scheduled maintenance, API will be back up at 23:00Z",
                    "timestamp": "2025-03-01T21:00:00Z"
                }
            },
            {
                "test_case_name": "Server returns degraded status",
                "description": "Verify that the server returns a 'degraded' status when performance is affected.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/status",
                "expected_status": true,
                "expected_response": {
                    "status": "degraded",
                    "message": "Experiencing higher than normal latency.",
                    "timestamp": "2025-03-01T21:00:00Z"
                }
            }
        ]
    },
    {
        "input": {
            "name": "Submit Support Ticket",
            "method": "POST",
            "url": "https://api.example.com/v1/support/tickets",
            "body": {
                "subject": "Login Issues",
                "description": "I am unable to login to my account.",
                "priority": "high"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully submit support ticket",
                "description": "Verify a support ticket is created with valid information.",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/support/tickets",
                "body": {
                    "subject": "Login Issues",
                    "description": "I am unable to login to my account.",
                    "priority": "high"
                },
                "expected_status": true,
                "expected_response": {
                    "ticket_id": "SUP-20250301-001"
                }
            },
            {
                "test_case_name": "Submit support ticket with missing description",
                "description": "Verify the API rejects tickets without a description.",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/support/tickets",
                "body": {
                    "subject": "Login Issues",
                    "priority": "high"
                },
                "expected_status": false
            },
            {
                "test_case_name": "Submit support ticket with invalid priority",
                "description": "Verify the API validates priority values.",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/support/tickets",
                "body": {
                    "subject": "Login Issues",
                    "description": "I am unable to login to my account.",
                    "priority": "critical"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Exchange Rate",
            "method": "GET",
            "url": "https://api.example.com/v1/exchange-rate",
            "params": [
                {
                    "key": "from",
                    "value": "USD"
                },
                {
                    "key": "to",
                    "value": "EUR"
                }
            ],
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve exchange rate",
                "description": "Verify the API returns the current exchange rate for USD to EUR.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/exchange-rate?from=USD&to=EUR",
                "expected_status": true,
                "expected_response": {
                    "rate": 0.85
                }
            },
            {
                "test_case_name": "Invalid currency code",
                "description": "Verify the API returns an error for an invalid currency code.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/exchange-rate?from=XYZ&to=EUR",
                "expected_status": false
            },
            {
                "test_case_name": "Missing currency parameter",
                "description": "Verify the API returns an error when a required currency parameter is missing.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/exchange-rate?to=EUR",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Schedule Backup",
            "method": "POST",
            "url": "https://api.example.com/v1/backups",
            "body": {
                "schedule": "daily",
                "time": "03:00",
                "retention_days": 7
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully schedule backup",
                "description": "Verify a backup schedule is created with valid information.",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/backups",
                "body": {
                    "schedule": "daily",
                    "time": "03:00",
                    "retention_days": 7
                },
                "expected_status": true,
                "expected_response": {
                    "backup_id": "BACKUP-20250301-001"
                }
            },
            {
                "test_case_name": "Schedule backup with invalid schedule type",
                "description": "Verify the API validates schedule values.",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/backups",
                "body": {
                    "schedule": "hourly",
                    "time": "03:00",
                    "retention_days": 7
                },
                "expected_status": false
            },
            {
                "test_case_name": "Schedule backup with invalid time format",
                "description": "Verify the API validates time formats.",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/backups",
                "body": {
                    "schedule": "daily",
                    "time": "3:00 AM",
                    "retention_days": 7
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Send Notification",
            "method": "POST",
            "url": "https://api.example.com/v1/notifications",
            "body": {
                "user_id": "USER123",
                "message": "Your order has shipped!",
                "type": "email"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer service_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully send notification",
                "description": "Verify a notification is sent to the specified user.",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer service_token"
                    }
                ],
                "url": "https://api.example.com/v1/notifications",
                "body": {
                    "user_id": "USER123",
                    "message": "Your order has shipped!",
                    "type": "email"
                },
                "expected_status": true,
                "expected_response": {
                    "notification_id": "NOTIF-20250301-001"
                }
            },
            {
                "test_case_name": "Send notification to invalid user",
                "description": "Verify the API handles sending notifications to non-existent users.",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer service_token"
                    }
                ],
                "url": "https://api.example.com/v1/notifications",
                "body": {
                    "user_id": "NONEXISTENT",
                    "message": "Important system update.",
                    "type": "push"
                },
                "expected_status": true,
                "expected_response": {
                    "notification_id": "NOTIF-20250301-002"
                }
            },
            {
                "test_case_name": "Send notification with invalid type",
                "description": "Verify the API validates notification types.",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer service_token"
                    }
                ],
                "url": "https://api.example.com/v1/notifications",
                "body": {
                    "user_id": "USER123",
                    "message": "Critical security alert.",
                    "type": "telepathy"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Top Trending Articles",
            "method": "GET",
            "url": "https://api.example.com/v1/articles/trending",
            "params": [
                {
                    "key": "limit",
                    "value": "10"
                },
                {
                    "key": "days",
                    "value": "7"
                }
            ],
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve trending articles",
                "description": "Verify the API returns a list of trending articles for the past 7 days, limited to 10 results.",
                "method": "GET",
                "url": "https://api.example.com/v1/articles/trending?limit=10&days=7",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "expected_status": true,
                "body": null
            },
            {
                "test_case_name": "Trending articles with invalid limit",
                "description": "Verify the API returns an error when the limit is invalid (e.g., negative).",
                "method": "GET",
                "url": "https://api.example.com/v1/articles/trending?limit=-5&days=7",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "expected_status": false,
                "body": null
            }
        ]
    },
    {
        "input": {
            "name": "Create a New Blog Post",
            "method": "POST",
            "url": "https://api.example.com/v1/blog/posts",
            "body": {
                "title": "My First Blog Post",
                "content": "This is the content of my first blog post.",
                "tags": [
                    "blogging",
                    "first post"
                ]
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer editor_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create a new blog post",
                "description": "Verify a new blog post is created with valid data.",
                "method": "POST",
                "url": "https://api.example.com/v1/blog/posts",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer editor_token"
                    }
                ],
                "expected_status": true,
                "body": {
                    "title": "My First Blog Post",
                    "content": "This is the content of my first blog post.",
                    "tags": [
                        "blogging",
                        "first post"
                    ]
                }
            },
            {
                "test_case_name": "Create blog post with missing content",
                "description": "Verify the API returns an error when the content is missing.",
                "method": "POST",
                "url": "https://api.example.com/v1/blog/posts",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer editor_token"
                    }
                ],
                "expected_status": false,
                "body": {
                    "title": "My First Blog Post",
                    "tags": [
                        "blogging",
                        "first post"
                    ]
                }
            }
        ]
    },
    {
        "input": {
            "name": "Get Weather Forecast",
            "method": "GET",
            "url": "https://api.example.com/v1/weather",
            "params": [
                {
                    "key": "city",
                    "value": "London"
                },
                {
                    "key": "units",
                    "value": "metric"
                }
            ],
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve weather forecast",
                "description": "Verify the API returns the weather forecast for London in metric units.",
                "method": "GET",
                "url": "https://api.example.com/v1/weather?city=London&units=metric",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "expected_status": true,
                "body": null
            },
            {
                "test_case_name": "Weather forecast with invalid city",
                "description": "Verify the API returns an error for an invalid city name.",
                "method": "GET",
                "url": "https://api.example.com/v1/weather?city=NonExistentCity&units=metric",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "expected_status": false,
                "body": null
            }
        ]
    },
    {
        "input": {
            "name": "Update User Settings",
            "method": "PATCH",
            "url": "https://api.example.com/v1/users/settings",
            "body": {
                "notifications_enabled": false,
                "theme": "dark"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully update user settings",
                "description": "Verify user settings are updated successfully.",
                "method": "PATCH",
                "url": "https://api.example.com/v1/users/settings",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "expected_status": true,
                "body": {
                    "notifications_enabled": false,
                    "theme": "dark"
                }
            },
            {
                "test_case_name": "Update settings with invalid theme",
                "description": "Verify the API returns an error for an invalid theme value.",
                "method": "PATCH",
                "url": "https://api.example.com/v1/users/settings",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "expected_status": false,
                "body": {
                    "notifications_enabled": false,
                    "theme": "neon"
                }
            }
        ]
    },
    {
        "input": {
            "name": "Delete a User Account",
            "method": "DELETE",
            "url": "https://api.example.com/v1/users/account",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully delete user account",
                "description": "Verify a user account is deleted successfully.",
                "method": "DELETE",
                "url": "https://api.example.com/v1/users/account",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "expected_status": true,
                "body": null
            },
            {
                "test_case_name": "Attempt to delete account with invalid token",
                "description": "Verify the API returns an error with an invalid authorization token.",
                "method": "DELETE",
                "url": "https://api.example.com/v1/users/account",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer invalid_token"
                    }
                ],
                "expected_status": false,
                "body": null
            }
        ]
    },
    {
        "input": {
            "name": "Get List of Available Flights",
            "method": "GET",
            "url": "https://api.example.com/v1/flights",
            "params": [
                {
                    "key": "from",
                    "value": "NYC"
                },
                {
                    "key": "to",
                    "value": "LAX"
                },
                {
                    "key": "date",
                    "value": "2025-03-08"
                }
            ],
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve list of flights",
                "description": "Verify the API returns a list of flights from NYC to LAX on the specified date.",
                "method": "GET",
                "url": "https://api.example.com/v1/flights?from=NYC&to=LAX&date=2025-03-08",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "expected_status": true,
                "body": null
            },
            {
                "test_case_name": "Flights with invalid date format",
                "description": "Verify the API returns an error for an invalid date format.",
                "method": "GET",
                "url": "https://api.example.com/v1/flights?from=NYC&to=LAX&date=03-08-2025",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "expected_status": false,
                "body": null
            }
        ]
    },
    {
        "input": {
            "name": "Book a Flight",
            "method": "POST",
            "url": "https://api.example.com/v1/flights/booking",
            "body": {
                "flight_id": "FL123",
                "passenger_name": "John Doe",
                "seat_number": "22A"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully book a flight",
                "description": "Verify a flight is booked successfully with valid information.",
                "method": "POST",
                "url": "https://api.example.com/v1/flights/booking",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "expected_status": true,
                "body": {
                    "flight_id": "FL123",
                    "passenger_name": "John Doe",
                    "seat_number": "22A"
                }
            },
            {
                "test_case_name": "Book flight with invalid flight ID",
                "description": "Verify the API returns an error for a non-existent flight ID.",
                "method": "POST",
                "url": "https://api.example.com/v1/flights/booking",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "expected_status": false,
                "body": {
                    "flight_id": "INVALID",
                    "passenger_name": "John Doe",
                    "seat_number": "22A"
                }
            }
        ]
    },
    {
        "input": {
            "name": "Get List of Movies",
            "method": "GET",
            "url": "https://api.example.com/v1/movies",
            "params": [
                {
                    "key": "genre",
                    "value": "action"
                },
                {
                    "key": "year",
                    "value": "2024"
                }
            ],
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve list of movies",
                "description": "Verify the API returns a list of action movies released in 2024.",
                "method": "GET",
                "url": "https://api.example.com/v1/movies?genre=action&year=2024",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "expected_status": true,
                "body": null
            },
            {
                "test_case_name": "Movies with invalid genre",
                "description": "Verify the API returns an empty list or an error for an invalid genre.",
                "method": "GET",
                "url": "https://api.example.com/v1/movies?genre=invalid_genre&year=2024",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "expected_status": true,
                "body": null
            }
        ]
    },
    {
        "input": {
            "name": "Submit a Movie Review",
            "method": "POST",
            "url": "https://api.example.com/v1/movies/reviews",
            "body": {
                "movie_id": "MV001",
                "rating": 4,
                "comment": "Great movie!"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully submit a movie review",
                "description": "Verify a movie review is submitted successfully.",
                "method": "POST",
                "url": "https://api.example.com/v1/movies/reviews",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "expected_status": true,
                "body": {
                    "movie_id": "MV001",
                    "rating": 4,
                    "comment": "Great movie!"
                }
            },
            {
                "test_case_name": "Review with invalid rating",
                "description": "Verify the API returns an error for an invalid rating value (e.g., outside the range of 1-5).",
                "method": "POST",
                "url": "https://api.example.com/v1/movies/reviews",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "expected_status": false,
                "body": {
                    "movie_id": "MV001",
                    "rating": 6,
                    "comment": "Great movie!"
                }
            }
        ]
    },
    {
        "input": {
            "name": "Get Exchange Rate",
            "method": "GET",
            "url": "https://api.example.com/v1/exchange-rate",
            "params": [
                {
                    "key": "from",
                    "value": "USD"
                },
                {
                    "key": "to",
                    "value": "INR"
                },
                {
                    "key": "date",
                    "value": "2024-03-01"
                }
            ],
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve exchange rate",
                "description": "Verify the API returns the current exchange rate for USD to INR.",
                "method": "GET",
                "url": "https://api.example.com/v1/exchange-rate?from=USD&to=INR&date=2024-03-01",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "expected_status": true,
                "body": null
            },
            {
                "test_case_name": "Get exchange rate for future date",
                "description": "Verify that the API validates future dates for exchange rates",
                "method": "GET",
                "url": "https://api.example.com/v1/exchange-rate?from=USD&to=INR&date=2025-03-08",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "expected_status": false,
                "body": null
            }
        ]
    },
    {
        "input": {
            "name": "Create Patient Record",
            "method": "POST",
            "url": "https://api.example.com/v1/patients",
            "body": {
                "name": "john deo",
                "age": 49,
                "gender": "male"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer doctor_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create patient record",
                "description": "Verify the API creates a patient record if valid parameters are passed",
                "method": "POST",
                "url": "https://api.example.com/v1/patients",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer doctor_token"
                    }
                ],
                "expected_status": true,
                "body": {
                    "name": "john deo",
                    "age": 49,
                    "gender": "male"
                }
            },
            {
                "test_case_name": "Create Patient Record with missing gender",
                "description": "Verify that the API validates mandatory fields for patient records",
                "method": "POST",
                "url": "https://api.example.com/v1/patients",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer doctor_token"
                    }
                ],
                "expected_status": false,
                "body": {
                    "name": "john deo",
                    "age": 49
                }
            }
        ]
    },
    {
        "input": {
            "name": "Find doctor based on specialization",
            "method": "GET",
            "url": "https://api.example.com/v1/doctors",
            "params": [
                {
                    "key": "specialization",
                    "value": "ENT"
                },
                {
                    "key": "availability",
                    "value": "Evening"
                }
            ],
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve doctor",
                "description": "Verify the API return list of doctor based on user search",
                "method": "GET",
                "url": "https://api.example.com/v1/doctors?specialization=ENT&availability=Evening",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "expected_status": true,
                "body": null
            },
            {
                "test_case_name": "Doctors with no evening availability",
                "description": "Verify that the API return a appropriate message when no doctors are available",
                "method": "GET",
                "url": "https://api.example.com/v1/doctors?specialization=ENT&availability=Morning",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "expected_status": false,
                "body": null
            }
        ]
    },
    {
        "input": {
            "name": "Update Inventory level",
            "method": "PUT",
            "url": "https://api.example.com/v1/inventory/{product_id}",
            "body": {
                "quantity": 49
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer manager_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully update inventory",
                "description": "Verify the API updates a inventory if valid parameters are passed",
                "method": "PUT",
                "url": "https://api.example.com/v1/inventory/PROD123",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer manager_token"
                    }
                ],
                "expected_status": true,
                "body": {
                    "quantity": 49
                }
            },
            {
                "test_case_name": "Update inventory quantity with invalid params",
                "description": "Verify that the API validates quantity parameters",
                "method": "PUT",
                "url": "https://api.example.com/v1/inventory/PROD123",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer manager_token"
                    }
                ],
                "expected_status": false,
                "body": {
                    "quantity": -10
                }
            }
        ]
    },
    {
        "input": {
            "name": "Create a refund request",
            "method": "POST",
            "url": "https://api.example.com/v1/refunds",
            "body": {
                "order_id": "ORD123",
                "reason": "Damaged product",
                "amount": "49.00"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer customer_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully requested a refund",
                "description": "Verify the API create a refund request when passed valid parameters",
                "method": "POST",
                "url": "https://api.example.com/v1/refunds",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "expected_status": true,
                "body": {
                    "order_id": "ORD123",
                    "reason": "Damaged product",
                    "amount": "49.00"
                }
            },
            {
                "test_case_name": "Create a refund request with invalid order ID",
                "description": "Verify that the API validates if a order ID is valid before taking refund request",
                "method": "POST",
                "url": "https://api.example.com/v1/refunds",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "expected_status": false,
                "body": {
                    "order_id": "INVALID",
                    "reason": "Damaged product",
                    "amount": "49.00"
                }
            }
        ]
    },
    {
        "input": {
            "name": "Send feedback to support",
            "method": "POST",
            "url": "https://api.example.com/v1/feedback",
            "body": {
                "message": "bad quality",
                "rating": "2",
                "email": "customer@gmail.com"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully send feedback to support",
                "description": "Verify the API successfully delivers feedback to support team",
                "method": "POST",
                "url": "https://api.example.com/v1/feedback",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "expected_status": true,
                "body": {
                    "message": "bad quality",
                    "rating": "2",
                    "email": "customer@gmail.com"
                }
            },
            {
                "test_case_name": "Send feedback with invalid message type",
                "description": "Verify that the API validates message before delivering",
                "method": "POST",
                "url": "https://api.example.com/v1/feedback",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "expected_status": false,
                "body": {
                    "message": 123,
                    "rating": "2",
                    "email": "customer@gmail.com"
                }
            }
        ]
    },
    {
        "input": {
            "name": "Schedule Maintenance",
            "method": "POST",
            "url": "https://api.example.com/v1/maintenance",
            "body": {
                "start_time": "2024-03-01 23:00:00",
                "end_time": "2024-03-02 04:00:00",
                "reason": "Server Patching"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully Scheduled Maintenance",
                "description": "Verify the API successfully Schedules Maintenance",
                "method": "POST",
                "url": "https://api.example.com/v1/maintenance",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "expected_status": true,
                "body": {
                    "start_time": "2024-03-01 23:00:00",
                    "end_time": "2024-03-02 04:00:00",
                    "reason": "Server Patching"
                }
            },
            {
                "test_case_name": "Schedule Maintenance with invalid time",
                "description": "Verify that the API validates timing ",
                "method": "POST",
                "url": "https://api.example.com/v1/maintenance",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "expected_status": false,
                "body": {
                    "start_time": "2024-03-01",
                    "end_time": "2024-03-02",
                    "reason": "Server Patching"
                }
            }
        ]
    },
    {
        "input": {
            "name": "Update Item in Cart",
            "method": "PUT",
            "url": "https://api.example.com/v1/cart/items/{item_id}",
            "body": {
                "quantity": 3
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer customer_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully update quantity of item in cart",
                "description": "Verify that the quantity of an item in the cart can be updated.",
                "method": "PUT",
                "url": "https://api.example.com/v1/cart/items/ITEM123",
                "expected_status": true,
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "body": {
                    "quantity": 3
                }
            },
            {
                "test_case_name": "Update with invalid quantity",
                "description": "Verify the API returns an error when updating with an invalid quantity (e.g., negative).",
                "method": "PUT",
                "url": "https://api.example.com/v1/cart/items/ITEM123",
                "expected_status": false,
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "body": {
                    "quantity": -1
                }
            }
        ]
    },
    {
        "input": {
            "name": "Remove Item from Cart",
            "method": "DELETE",
            "url": "https://api.example.com/v1/cart/items/{item_id}",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer customer_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully remove item from cart",
                "description": "Verify an item can be removed from the cart.",
                "method": "DELETE",
                "url": "https://api.example.com/v1/cart/items/ITEM123",
                "expected_status": true,
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "body": null
            },
            {
                "test_case_name": "Remove non-existent item",
                "description": "Verify the API handles attempting to remove a non-existent item from the cart.",
                "method": "DELETE",
                "url": "https://api.example.com/v1/cart/items/NONEXISTENT",
                "expected_status": true,
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "body": null
            }
        ]
    },
    {
        "input": {
            "name": "Apply Coupon Code",
            "method": "POST",
            "url": "https://api.example.com/v1/cart/coupon",
            "body": {
                "coupon_code": "SUMMER20"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer customer_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully apply coupon code",
                "description": "Verify a valid coupon code can be applied to the cart.",
                "method": "POST",
                "url": "https://api.example.com/v1/cart/coupon",
                "expected_status": true,
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "body": {
                    "coupon_code": "SUMMER20"
                }
            },
            {
                "test_case_name": "Apply invalid coupon code",
                "description": "Verify the API returns an error for an invalid coupon code.",
                "method": "POST",
                "url": "https://api.example.com/v1/cart/coupon",
                "expected_status": false,
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "body": {
                    "coupon_code": "INVALID"
                }
            }
        ]
    },
    {
        "input": {
            "name": "Calculate Shipping Cost",
            "method": "POST",
            "url": "https://api.example.com/v1/shipping/cost",
            "body": {
                "address": {
                    "street": "123 Main St",
                    "city": "Anytown",
                    "state": "CA",
                    "zip": "91234"
                },
                "items": [
                    {
                        "product_id": "PROD123",
                        "quantity": 1
                    }
                ]
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer customer_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully calculate shipping cost",
                "description": "Verify the API returns a shipping cost for the given address and items.",
                "method": "POST",
                "url": "https://api.example.com/v1/shipping/cost",
                "expected_status": true,
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "body": {
                    "address": {
                        "street": "123 Main St",
                        "city": "Anytown",
                        "state": "CA",
                        "zip": "91234"
                    },
                    "items": [
                        {
                            "product_id": "PROD123",
                            "quantity": 1
                        }
                    ]
                }
            },
            {
                "test_case_name": "Calculate shipping to invalid address",
                "description": "Verify the API returns an error for an invalid address.",
                "method": "POST",
                "url": "https://api.example.com/v1/shipping/cost",
                "expected_status": false,
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "body": {
                    "address": {
                        "street": "Invalid Address",
                        "city": "Invalid City",
                        "state": "XX",
                        "zip": "00000"
                    },
                    "items": [
                        {
                            "product_id": "PROD123",
                            "quantity": 1
                        }
                    ]
                }
            }
        ]
    },
    {
        "input": {
            "name": "Create Order",
            "method": "POST",
            "url": "https://api.example.com/v1/orders",
            "body": {
                "shipping_address": {
                    "street": "123 Main St",
                    "city": "Anytown",
                    "state": "CA",
                    "zip": "91234"
                },
                "payment_method": "credit_card"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer customer_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create order",
                "description": "Verify an order is created successfully with valid information.",
                "method": "POST",
                "url": "https://api.example.com/v1/orders",
                "expected_status": true,
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "body": {
                    "shipping_address": {
                        "street": "123 Main St",
                        "city": "Anytown",
                        "state": "CA",
                        "zip": "91234"
                    },
                    "payment_method": "credit_card"
                }
            },
            {
                "test_case_name": "Create order with invalid payment method",
                "description": "Verify the API returns an error for an invalid payment method.",
                "method": "POST",
                "url": "https://api.example.com/v1/orders",
                "expected_status": false,
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "body": {
                    "shipping_address": {
                        "street": "123 Main St",
                        "city": "Anytown",
                        "state": "CA",
                        "zip": "91234"
                    },
                    "payment_method": "invalid_payment"
                }
            }
        ]
    },
    {
        "input": {
            "name": "Cancel Order",
            "method": "POST",
            "url": "https://api.example.com/v1/orders/{order_id}/cancel",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer customer_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully cancel order",
                "description": "Verify an order can be cancelled by the customer.",
                "method": "POST",
                "url": "https://api.example.com/v1/orders/ORD123/cancel",
                "expected_status": true,
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "body": null
            },
            {
                "test_case_name": "Cancel already shipped order",
                "description": "Verify the API returns an error when attempting to cancel an already shipped order.",
                "method": "POST",
                "url": "https://api.example.com/v1/orders/ORD123/cancel",
                "expected_status": false,
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "body": null
            }
        ]
    },
    {
        "input": {
            "name": "Get Order History",
            "method": "GET",
            "url": "https://api.example.com/v1/orders/history",
            "params": [
                {
                    "key": "page",
                    "value": "1"
                },
                {
                    "key": "limit",
                    "value": "20"
                }
            ],
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer customer_token"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve order history",
                "description": "Verify the API returns a list of the user's past orders.",
                "method": "GET",
                "url": "https://api.example.com/v1/orders/history?page=1&limit=20",
                "expected_status": true,
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "body": null
            },
            {
                "test_case_name": "Order history with invalid page number",
                "description": "Verify the API handles invalid page numbers (e.g., negative).",
                "method": "GET",
                "url": "https://api.example.com/v1/orders/history?page=-1&limit=20",
                "expected_status": false,
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "body": null
            }
        ]
    },
    {
        "input": {
            "name": "Add Product Review",
            "method": "POST",
            "url": "https://api.example.com/v1/products/{product_id}/reviews",
            "body": {
                "rating": 5,
                "comment": "Excellent product!"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer customer_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully add product review",
                "description": "Verify a product review is added successfully.",
                "method": "POST",
                "url": "https://api.example.com/v1/products/PROD123/reviews",
                "expected_status": true,
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "body": {
                    "rating": 5,
                    "comment": "Excellent product!"
                }
            },
            {
                "test_case_name": "Review with rating outside valid range",
                "description": "Verify the API validates the rating value (e.g., 1-5).",
                "method": "POST",
                "url": "https://api.example.com/v1/products/PROD123/reviews",
                "expected_status": false,
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "body": {
                    "rating": 6,
                    "comment": "Excellent product!"
                }
            }
        ]
    },
    {
        "input": {
            "name": "Get Product Reviews",
            "method": "GET",
            "url": "https://api.example.com/v1/products/{product_id}/reviews",
            "params": [
                {
                    "key": "sort",
                    "value": "rating_desc"
                }
            ],
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve product reviews",
                "description": "Verify the API returns a list of reviews for the specified product, sorted by rating in descending order.",
                "method": "GET",
                "url": "https://api.example.com/v1/products/PROD123/reviews?sort=rating_desc",
                "expected_status": true,
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "body": null
            },
            {
                "test_case_name": "Reviews with invalid sort order",
                "description": "Verify the API handles invalid sort order values.",
                "method": "GET",
                "url": "https://api.example.com/v1/products/PROD123/reviews?sort=invalid_sort",
                "expected_status": false,
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "body": null
            }
        ]
    },
    {
        "input": {
            "name": "Report a Product",
            "method": "POST",
            "url": "https://api.example.com/v1/products/{product_id}/report",
            "body": {
                "reason": "Inaccurate description"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer customer_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully report a product",
                "description": "Verify a product can be reported for an issue.",
                "method": "POST",
                "url": "https://api.example.com/v1/products/PROD123/report",
                "expected_status": true,
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "body": {
                    "reason": "Inaccurate description"
                }
            },
            {
                "test_case_name": "Report product with missing reason",
                "description": "Verify the API returns an error when the report reason is missing.",
                "method": "POST",
                "url": "https://api.example.com/v1/products/PROD123/report",
                "expected_status": false,
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "body": {}
            }
        ]
    },
    {
        "input": {
            "name": "Add Product to Wishlist",
            "method": "POST",
            "url": "https://api.example.com/v1/wishlist/items",
            "body": {
                "product_id": "PROD123"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer customer_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully add product to wishlist",
                "description": "Verify a product can be added to the user's wishlist.",
                "method": "POST",
                "url": "https://api.example.com/v1/wishlist/items",
                "expected_status": true,
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "body": {
                    "product_id": "PROD123"
                }
            },
            {
                "test_case_name": "Add duplicate product to wishlist",
                "description": "Verify the API handles adding a product that is already in the wishlist.",
                "method": "POST",
                "url": "https://api.example.com/v1/wishlist/items",
                "expected_status": true,
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "body": {
                    "product_id": "PROD123"
                }
            }
        ]
    },
    {
        "input": {
            "name": "Get Wishlist Items",
            "method": "GET",
            "url": "https://api.example.com/v1/wishlist/items",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer customer_token"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve wishlist items",
                "description": "Verify the API returns a list of the user's wishlist items.",
                "method": "GET",
                "url": "https://api.example.com/v1/wishlist/items",
                "expected_status": true,
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "body": null
            },
            {
                "test_case_name": "Unauthorized access to wishlist",
                "description": "Verify the API returns an error for unauthorized access.",
                "method": "GET",
                "url": "https://api.example.com/v1/wishlist/items",
                "expected_status": false,
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "invalid_token"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "body": null
            }
        ]
    },
    {
        "input": {
            "name": "Remove Product from Wishlist",
            "method": "DELETE",
            "url": "https://api.example.com/v1/wishlist/items/{item_id}",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer customer_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully remove product from wishlist",
                "description": "Verify a product can be removed from the wishlist.",
                "method": "DELETE",
                "url": "https://api.example.com/v1/wishlist/items/ITEM123",
                "expected_status": true,
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "body": null
            },
            {
                "test_case_name": "Remove non-existent item from wishlist",
                "description": "Verify the API handles attempting to remove a non-existent item.",
                "method": "DELETE",
                "url": "https://api.example.com/v1/wishlist/items/NONEXISTENT",
                "expected_status": true,
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "body": null
            }
        ]
    },
    {
        "input": {
            "name": "Track Order",
            "method": "GET",
            "url": "https://api.example.com/v1/orders/{order_id}/track",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer customer_token"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully track order",
                "description": "Verify the API returns tracking information for the specified order.",
                "method": "GET",
                "url": "https://api.example.com/v1/orders/ORD123/track",
                "expected_status": true,
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "body": null
            },
            {
                "test_case_name": "Track order with invalid ID",
                "description": "Verify the API returns an error for an invalid order ID.",
                "method": "GET",
                "url": "https://api.example.com/v1/orders/INVALID/track",
                "expected_status": false,
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "body": null
            }
        ]
    },
    {
        "input": {
            "name": "Get Product Recommendations",
            "method": "GET",
            "url": "https://api.example.com/v1/products/recommendations",
            "params": [
                {
                    "key": "user_id",
                    "value": "USER123"
                }
            ],
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve product recommendations",
                "description": "Verify the API returns a list of product recommendations for the specified user.",
                "method": "GET",
                "url": "https://api.example.com/v1/products/recommendations?user_id=USER123",
                "expected_status": true,
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "body": null
            },
            {
                "test_case_name": "Recommendations for non-existent user",
                "description": "Verify the API handles requests for non-existent users.",
                "method": "GET",
                "url": "https://api.example.com/v1/products/recommendations?user_id=NONEXISTENT",
                "expected_status": true,
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "body": null
            }
        ]
    },
    {
        "input": {
            "name": "Search Help Articles",
            "method": "GET",
            "url": "https://api.example.com/v1/help/search",
            "params": [
                {
                    "key": "query",
                    "value": "shipping"
                }
            ],
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully search help articles",
                "description": "Verify the API returns a list of help articles matching the search query.",
                "method": "GET",
                "url": "https://api.example.com/v1/help/search?query=shipping",
                "expected_status": true,
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "body": null
            },
            {
                "test_case_name": "Search with empty query",
                "description": "Verify the API handles an empty search query.",
                "method": "GET",
                "url": "https://api.example.com/v1/help/search?query=",
                "expected_status": true,
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "body": null
            }
        ]
    },
    {
        "input": {
            "name": "Get User Notifications",
            "method": "GET",
            "url": "https://api.example.com/v1/notifications",
            "params": [
                {
                    "key": "limit",
                    "value": "10"
                }
            ],
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer customer_token"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve user notifications",
                "description": "Verify the API returns a list of the user's notifications.",
                "method": "GET",
                "url": "https://api.example.com/v1/notifications?limit=10",
                "expected_status": true,
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "body": null
            },
            {
                "test_case_name": "Notifications with invalid limit",
                "description": "Verify the API handles an invalid limit value.",
                "method": "GET",
                "url": "https://api.example.com/v1/notifications?limit=invalid",
                "expected_status": false,
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "body": null
            }
        ]
    },
    {
        "input": {
            "name": "Mark Notification as Read",
            "method": "PUT",
            "url": "https://api.example.com/v1/notifications/{notification_id}/read",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer customer_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully mark notification as read",
                "description": "Verify a notification can be marked as read.",
                "method": "PUT",
                "url": "https://api.example.com/v1/notifications/NOTIF123/read",
                "expected_status": true,
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "body": null
            },
            {
                "test_case_name": "Mark non-existent notification as read",
                "description": "Verify the API handles attempting to mark a non-existent notification as read.",
                "method": "PUT",
                "url": "https://api.example.com/v1/notifications/NONEXISTENT/read",
                "expected_status": false,
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer customer_token"
                    }
                ],
                "body": null
            }
        ]
    },
    {
        "input": {
            "name": "Generate API Key",
            "method": "POST",
            "url": "https://api.example.com/v1/apikey",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully generate API key",
                "description": "Verify that a new API key can be generated with valid credentials",
                "method": "POST",
                "url": "https://api.example.com/v1/apikey",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "expected_status": true,
                "body": null
            },
            {
                "test_case_name": "Generate API Key without Authentication",
                "description": "Verify the API returns an error without providing any authentication header",
                "method": "POST",
                "url": "https://api.example.com/v1/apikey",
                "headers": [],
                "expected_status": false,
                "body": null
            }
        ]
    },
    {
        "input": {
            "name": "Validate API Key",
            "method": "GET",
            "url": "https://api.example.com/v1/apikey/validate",
            "headers": [
                {
                    "key": "X-API-Key",
                    "value": "valid_api_key"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully validate API Key",
                "description": "Verify that an API key can be validated and returns true status",
                "method": "GET",
                "url": "https://api.example.com/v1/apikey/validate",
                "headers": [
                    {
                        "key": "X-API-Key",
                        "value": "valid_api_key"
                    }
                ],
                "expected_status": true,
                "body": null
            },
            {
                "test_case_name": "Validate invalid API Key",
                "description": "Verify the API returns an error when providing invalid API Key",
                "method": "GET",
                "url": "https://api.example.com/v1/apikey/validate",
                "headers": [
                    {
                        "key": "X-API-Key",
                        "value": "invalid_api_key"
                    }
                ],
                "expected_status": false,
                "body": null
            }
        ]
    },
    {
        "input": {
            "name": "Get System Logs",
            "method": "GET",
            "url": "https://api.example.com/v1/logs",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ],
            "params": [
                {
                    "key": "level",
                    "value": "error"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully get system logs",
                "description": "Verify the API returns the system logs when user is authenticated",
                "method": "GET",
                "url": "https://api.example.com/v1/logs?level=error",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "expected_status": true,
                "body": null
            },
            {
                "test_case_name": "Get system logs with invalid authorization",
                "description": "Verify the API returns an error when providing invalid authorization key",
                "method": "GET",
                "url": "https://api.example.com/v1/logs?level=error",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer invalid_token"
                    }
                ],
                "expected_status": false,
                "body": null
            }
        ]
    },
    {
        "input": {
            "name": "Run Diagnostics",
            "method": "POST",
            "url": "https://api.example.com/v1/diagnostics",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ],
            "body": {
                "test": "connectivity"
            }
        },
        "output": [
            {
                "test_case_name": "Successfully run diagnostics",
                "description": "Verify that diagnostic can be run when valid credentials are provided",
                "method": "POST",
                "url": "https://api.example.com/v1/diagnostics",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "expected_status": true,
                "body": {
                    "test": "connectivity"
                }
            },
            {
                "test_case_name": "Run diagnostics with invalid body",
                "description": "Verify that the API returns an error with invalid body parameters",
                "method": "POST",
                "url": "https://api.example.com/v1/diagnostics",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "expected_status": false,
                "body": {
                    "invalid": "invalid"
                }
            }
        ]
    },
    {
        "input": {
            "name": "Run Security Scan",
            "method": "POST",
            "url": "https://api.example.com/v1/security/scan",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ],
            "body": {
                "scan_type": "quick"
            }
        },
        "output": [
            {
                "test_case_name": "Successfully run Security Scan",
                "description": "Verify the API runs security scan successfully when user is authenticated",
                "method": "POST",
                "url": "https://api.example.com/v1/security/scan",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "expected_status": true,
                "body": {
                    "scan_type": "quick"
                }
            },
            {
                "test_case_name": "Run Security Scan With invalid Auth",
                "description": "Verify the API returns an error with invalid auth token",
                "method": "POST",
                "url": "https://api.example.com/v1/security/scan",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "invalid_token"
                    }
                ],
                "expected_status": false,
                "body": {
                    "scan_type": "quick"
                }
            }
        ]
    },
    {
        "input": {
            "name": "Start Data Backup",
            "method": "POST",
            "url": "https://api.example.com/v1/backup/start",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully starts data backup",
                "description": "Verify the API starts a data backup successfully",
                "method": "POST",
                "url": "https://api.example.com/v1/backup/start",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "expected_status": true,
                "body": null
            },
            {
                "test_case_name": "Start Data Backup without Authentication",
                "description": "Verify the API returns an error when Authentication token is not provided",
                "method": "POST",
                "url": "https://api.example.com/v1/backup/start",
                "headers": [],
                "expected_status": false,
                "body": null
            }
        ]
    },
    {
        "input": {
            "name": "Restore Data Backup",
            "method": "POST",
            "url": "https://api.example.com/v1/backup/restore",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ],
            "body": {
                "backup_id": "BACKUP123"
            }
        },
        "output": [
            {
                "test_case_name": "Successfully restores data backup",
                "description": "Verify that data can be restored",
                "method": "POST",
                "url": "https://api.example.com/v1/backup/restore",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "expected_status": true,
                "body": {
                    "backup_id": "BACKUP123"
                }
            },
            {
                "test_case_name": "Restore Data Backup with invalid backup ID",
                "description": "Verify the API returns an error when backup id does not exists",
                "method": "POST",
                "url": "https://api.example.com/v1/backup/restore",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "expected_status": false,
                "body": {
                    "backup_id": "INVALID"
                }
            }
        ]
    },
    {
        "input": {
            "name": "Reboot System",
            "method": "POST",
            "url": "https://api.example.com/v1/system/reboot",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully reboots system",
                "description": "Verify that a reboot can be issued successfully",
                "method": "POST",
                "url": "https://api.example.com/v1/system/reboot",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "expected_status": true,
                "body": null
            },
            {
                "test_case_name": "Reboot system without authentication",
                "description": "Verify the API returns an error when not authenticated",
                "method": "POST",
                "url": "https://api.example.com/v1/system/reboot",
                "headers": [],
                "expected_status": false,
                "body": null
            }
        ]
    },
    {
        "input": {
            "name": "Shutdown System",
            "method": "POST",
            "url": "https://api.example.com/v1/system/shutdown",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully shutdowns system",
                "description": "Verify that a system shutdown can be issued successfully",
                "method": "POST",
                "url": "https://api.example.com/v1/system/shutdown",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "expected_status": true,
                "body": null
            },
            {
                "test_case_name": "Shutdown system without authentication",
                "description": "Verify the API returns an error when not authenticated",
                "method": "POST",
                "url": "https://api.example.com/v1/system/shutdown",
                "headers": [],
                "expected_status": false,
                "body": null
            }
        ]
    },
    {
        "input": {
            "name": "Get System Stats",
            "method": "GET",
            "url": "https://api.example.com/v1/system/stats",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieves system stats",
                "description": "Verify that the API returns the system stats successfully",
                "method": "GET",
                "url": "https://api.example.com/v1/system/stats",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "expected_status": true,
                "body": null
            },
            {
                "test_case_name": "Retrieves system stats without authentication",
                "description": "Verify the API returns an error when not authenticated",
                "method": "GET",
                "url": "https://api.example.com/v1/system/stats",
                "headers": [],
                "expected_status": false,
                "body": null
            }
        ]
    },
    {
        "input": {
            "name": "Create a New Task",
            "method": "POST",
            "url": "https://api.example.com/v1/tasks",
            "body": {
                "title": "Implement new feature",
                "description": "Develop and test the new feature",
                "due_date": "2025-04-01"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create a new task",
                "description": "Verify a new task is created with valid data.",
                "method": "POST",
                "url": "https://api.example.com/v1/tasks",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "expected_status": true,
                "body": {
                    "title": "Implement new feature",
                    "description": "Develop and test the new feature",
                    "due_date": "2025-04-01"
                }
            },
            {
                "test_case_name": "Create task with missing title",
                "description": "Verify the API returns an error when the title is missing.",
                "method": "POST",
                "url": "https://api.example.com/v1/tasks",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "expected_status": false,
                "body": {
                    "description": "Develop and test the new feature",
                    "due_date": "2025-04-01"
                }
            }
        ]
    },
    {
        "input": {
            "name": "Update Task",
            "method": "PUT",
            "url": "https://api.example.com/v1/tasks/{task_id}",
            "body": {
                "status": "completed"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully update task",
                "description": "Verify that a task can be updated with valid data",
                "method": "PUT",
                "url": "https://api.example.com/v1/tasks/TASK123",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "expected_status": true,
                "body": {
                    "status": "completed"
                }
            },
            {
                "test_case_name": "Update task with invalid status",
                "description": "Verify the API returns an error with invalid status",
                "method": "PUT",
                "url": "https://api.example.com/v1/tasks/TASK123",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "expected_status": false,
                "body": {
                    "status": "invalid"
                }
            }
        ]
    },
    {
        "input": {
            "name": "Delete Task",
            "method": "DELETE",
            "url": "https://api.example.com/v1/tasks/{task_id}",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully delete task",
                "description": "Verify a task can be deleted successfully",
                "method": "DELETE",
                "url": "https://api.example.com/v1/tasks/TASK123",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "expected_status": true,
                "body": null
            },
            {
                "test_case_name": "Delete task with invalid auth token",
                "description": "Verify the API returns an error with invalid auth token",
                "method": "DELETE",
                "url": "https://api.example.com/v1/tasks/TASK123",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "invalid_token"
                    }
                ],
                "expected_status": false,
                "body": null
            }
        ]
    },
    {
        "input": {
            "name": "Get List of Projects",
            "method": "GET",
            "url": "https://api.example.com/v1/projects",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve list of projects",
                "description": "Verify the API returns a list of projects for authenticated users.",
                "method": "GET",
                "url": "https://api.example.com/v1/projects",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "expected_status": true,
                "body": null
            },
            {
                "test_case_name": "Get list of project with invalid auth",
                "description": "Verify the API returns an error with invalid auth",
                "method": "GET",
                "url": "https://api.example.com/v1/projects",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "invalid_token"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "expected_status": false,
                "body": null
            }
        ]
    },
    {
        "input": {
            "name": "Create Project",
            "method": "POST",
            "url": "https://api.example.com/v1/projects",
            "body": {
                "name": "New Project",
                "description": "New Project for demonstration"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create Project",
                "description": "Verify new project creation",
                "method": "POST",
                "url": "https://api.example.com/v1/projects",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "expected_status": true,
                "body": {
                    "name": "New Project",
                    "description": "New Project for demonstration"
                }
            },
            {
                "test_case_name": "Create Project without name",
                "description": "Verify the API returns an error with missing name parameter",
                "method": "POST",
                "url": "https://api.example.com/v1/projects",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "expected_status": false,
                "body": {
                    "description": "New Project for demonstration"
                }
            }
        ]
    },
    {
        "input": {
            "name": "Get User Profile",
            "method": "GET",
            "url": "https://api.example.com/v1/users/{user_id}",
            "params": [
                {
                    "key": "include_details",
                    "value": "true"
                }
            ],
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer token123"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Attempt to retrieve user with special characters in ID",
                "description": "Verify the API handles user IDs containing special characters.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer token123"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/users/%23%24%25?include_details=true",
                "expected_status": false
            },
            {
                "test_case_name": "Request user profile without 'Accept' header",
                "description": "Check API behavior when 'Accept' header is missing.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer token123"
                    }
                ],
                "url": "https://api.example.com/v1/users/123?include_details=true",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Create Product",
            "method": "POST",
            "url": "https://api.example.com/v1/products",
            "body": {
                "name": "Smartphone",
                "price": 499.99,
                "description": "Latest model smartphone",
                "category": "electronics",
                "inventory": 100
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Create product with very long name",
                "description": "Verify that the API handles product names exceeding typical length limits.",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/products",
                "body": {
                    "name": "ThisIsAnExtremelyLongProductNameThatExceedsTypicalLimits",
                    "price": 499.99,
                    "description": "Latest model smartphone",
                    "category": "electronics",
                    "inventory": 100
                },
                "expected_status": false
            },
            {
                "test_case_name": "Create product with zero price",
                "description": "Check how the API handles products with a price of zero.",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/products",
                "body": {
                    "name": "Free Smartphone",
                    "price": 0.0,
                    "description": "Latest model smartphone",
                    "category": "electronics",
                    "inventory": 100
                },
                "expected_status": true
            },
            {
                "test_case_name": "Create product with missing category",
                "description": "Verify that the API returns an error when the 'category' field is missing.",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/products",
                "body": {
                    "name": "Smartphone",
                    "price": 499.99,
                    "description": "Latest model smartphone",
                    "inventory": 100
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Update Order Status",
            "method": "PUT",
            "url": "https://api.example.com/v1/orders/{order_id}/status",
            "body": {
                "status": "shipped",
                "tracking_number": "TRK123456789",
                "carrier": "FedEx"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer staff_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Update order status with mixed-case status",
                "description": "Verify that the API handles order status values with mixed-case letters.",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer staff_token"
                    }
                ],
                "url": "https://api.example.com/v1/orders/ORD-12345/status",
                "body": {
                    "status": "ShiPped",
                    "tracking_number": "TRK123456789",
                    "carrier": "FedEx"
                },
                "expected_status": false
            },
            {
                "test_case_name": "Update order with missing tracking number and carrier",
                "description": "Verify that the API can update the order status to 'shipped' even if the tracking_number and carrier are missing.",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer staff_token"
                    }
                ],
                "url": "https://api.example.com/v1/orders/ORD-12345/status",
                "body": {
                    "status": "shipped",
                    "tracking_number": "",
                    "carrier": ""
                },
                "expected_status": true
            }
        ]
    },
    {
        "input": {
            "name": "Delete Comment",
            "method": "DELETE",
            "url": "https://api.example.com/v1/comments/{comment_id}",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ],
            "params": [
                {
                    "key": "force",
                    "value": "true"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Attempt to delete non-existent comment",
                "description": "Verify the API's response when trying to delete a comment that doesn't exist.",
                "method": "DELETE",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/comments/9999?force=true",
                "expected_status": false
            },
            {
                "test_case_name": "Delete comment with missing 'force' parameter",
                "description": "Verify that API does not allow deleting comments without the 'force' parameter.",
                "method": "DELETE",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/comments/456",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Search Products",
            "method": "GET",
            "url": "https://api.example.com/v1/products/search",
            "params": [
                {
                    "key": "query",
                    "value": "smartphone"
                },
                {
                    "key": "category",
                    "value": "electronics"
                },
                {
                    "key": "min_price",
                    "value": "200"
                },
                {
                    "key": "max_price",
                    "value": "800"
                },
                {
                    "key": "sort",
                    "value": "price_asc"
                },
                {
                    "key": "limit",
                    "value": "20"
                },
                {
                    "key": "page",
                    "value": "1"
                }
            ],
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Search for products with a very high price range",
                "description": "Verify that API can handle searches with extremely high price ranges.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/search?query=smartphone&min_price=10000&max_price=20000",
                "expected_status": true
            },
            {
                "test_case_name": "Search with invalid sort order",
                "description": "Verify that API handles invalid values for the 'sort' parameter.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/search?query=smartphone&sort=invalid_sort",
                "expected_status": false
            },
            {
                "test_case_name": "Search products with special characters in the query",
                "description": "Test the handling of special characters in the search query.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/search?query=smart%20phone%21%40%23",
                "expected_status": true
            },
            {
                "test_case_name": "Search with very small pagination limit",
                "description": "Verify API behavior when a very small pagination limit is provided.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/search?query=smartphone&limit=1",
                "expected_status": true
            }
        ]
    },
    {
        "input": {
            "name": "Create Product",
            "method": "POST",
            "url": "https://api.example.com/v1/products",
            "body": {
                "name": "Tablet",
                "price": 299.99,
                "description": "Latest model tablet",
                "category": "electronics",
                "inventory": 50
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Create product with unicode characters in the description",
                "description": "Test the handling of Unicode characters in product descriptions.",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/products",
                "body": {
                    "name": "Tablet",
                    "price": 299.99,
                    "description": "Latest model tablet with special characters: \u00e9\u00e0\u00e7\u00fc\u00f6",
                    "category": "electronics",
                    "inventory": 50
                },
                "expected_status": true
            }
        ]
    },
    {
        "input": {
            "name": "Update Order Status",
            "method": "PUT",
            "url": "https://api.example.com/v1/orders/{order_id}/status",
            "body": {
                "status": "cancelled",
                "tracking_number": "TRK987654321",
                "carrier": "UPS"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer staff_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Update order status with valid data",
                "description": "Verify that an order status can be updated with valid information",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer staff_token"
                    }
                ],
                "url": "https://api.example.com/v1/orders/ORD-12345/status",
                "body": {
                    "status": "cancelled",
                    "tracking_number": "TRK987654321",
                    "carrier": "UPS"
                },
                "expected_status": true
            }
        ]
    },
    {
        "input": {
            "name": "Get User Profile",
            "method": "GET",
            "url": "https://api.example.com/v1/users/{user_id}",
            "params": [
                {
                    "key": "include_details",
                    "value": "true"
                }
            ],
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer token123"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Request user profile with unescaped characters in 'include_details'",
                "description": "Check API behavior when unescaped characters are provided in the 'include_details' value.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer token123"
                    }
                ],
                "url": "https://api.example.com/v1/users/123?include_details=true%26test=test",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get User Profile",
            "method": "GET",
            "url": "https://api.example.com/v1/users/{user_id}",
            "params": [
                {
                    "key": "include_details",
                    "value": "true"
                }
            ],
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer token123"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Retrieve user with URL encoded characters in user ID",
                "description": "Verify API correctly handles URL encoded characters in the user ID.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer token123"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/users/user%20id?include_details=true",
                "expected_status": false
            },
            {
                "test_case_name": "Attempt to retrieve user with an extremely long ID",
                "description": "Verify the system's behavior when presented with an excessively long user ID.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer token123"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/users/1234567890123456789012345678901234567890?include_details=true",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Create Product",
            "method": "POST",
            "url": "https://api.example.com/v1/products",
            "body": {
                "name": "Tablet",
                "price": 299.99,
                "description": "Latest model tablet",
                "category": "electronics",
                "inventory": 50
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Create product with very high inventory count",
                "description": "Verify API handles very large inventory values correctly.",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/products",
                "body": {
                    "name": "Tablet",
                    "price": 299.99,
                    "description": "Latest model tablet",
                    "category": "electronics",
                    "inventory": 1000000
                },
                "expected_status": true
            },
            {
                "test_case_name": "Create product with missing Content-Type header",
                "description": "Verify that the API returns an error when the Content-Type header is missing.",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/products",
                "body": {
                    "name": "Tablet",
                    "price": 299.99,
                    "description": "Latest model tablet",
                    "category": "electronics",
                    "inventory": 50
                },
                "expected_status": false
            },
            {
                "test_case_name": "Create product with empty name",
                "description": "Verify API behavior when the product name is empty.",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/products",
                "body": {
                    "name": "",
                    "price": 299.99,
                    "description": "Latest model tablet",
                    "category": "electronics",
                    "inventory": 50
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Update Order Status",
            "method": "PUT",
            "url": "https://api.example.com/v1/orders/{order_id}/status",
            "body": {
                "status": "shipped",
                "tracking_number": "TRK123456789",
                "carrier": "FedEx"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer staff_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Update order status with null values",
                "description": "Verify that the API handles order status updates with null values in the body.",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer staff_token"
                    }
                ],
                "url": "https://api.example.com/v1/orders/ORD-12345/status",
                "body": {
                    "status": null,
                    "tracking_number": null,
                    "carrier": null
                },
                "expected_status": false
            },
            {
                "test_case_name": "Attempt to update order status with no body",
                "description": "Verify API's behavior when attempting to update order status without a request body.",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer staff_token"
                    }
                ],
                "url": "https://api.example.com/v1/orders/ORD-12345/status",
                "body": {},
                "expected_status": false
            },
            {
                "test_case_name": "Update order status with invalid order ID format",
                "description": "Check API behavior when the provided order ID has an invalid format.",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer staff_token"
                    }
                ],
                "url": "https://api.example.com/v1/orders/12345/status",
                "body": {
                    "status": "shipped",
                    "tracking_number": "TRK123456789",
                    "carrier": "FedEx"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Delete Comment",
            "method": "DELETE",
            "url": "https://api.example.com/v1/comments/{comment_id}",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ],
            "params": [
                {
                    "key": "force",
                    "value": "true"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Attempt to delete comment without Authorization header",
                "description": "Verify that the API returns an error when Authorization header is missing.",
                "method": "DELETE",
                "url": "https://api.example.com/v1/comments/456?force=true",
                "expected_status": false
            },
            {
                "test_case_name": "Delete with force parameter as a number",
                "description": "Check if the API correctly handles the 'force' parameter when it is a number rather than boolean",
                "method": "DELETE",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/comments/456?force=1",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Search Products",
            "method": "GET",
            "url": "https://api.example.com/v1/products/search",
            "params": [
                {
                    "key": "query",
                    "value": "smartphone"
                },
                {
                    "key": "category",
                    "value": "electronics"
                },
                {
                    "key": "min_price",
                    "value": "200"
                },
                {
                    "key": "max_price",
                    "value": "800"
                },
                {
                    "key": "sort",
                    "value": "price_asc"
                },
                {
                    "key": "limit",
                    "value": "20"
                },
                {
                    "key": "page",
                    "value": "1"
                }
            ],
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Search with a very large page number",
                "description": "Verify that API handles searches with a very large page number",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/search?query=smartphone&page=1000",
                "expected_status": true
            },
            {
                "test_case_name": "Search using a category with mixed case",
                "description": "Verify that API handles searches for categories with mixed case.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/search?query=smartphone&category=EleCtrOnIcs",
                "expected_status": true
            },
            {
                "test_case_name": "Search products with a very long query",
                "description": "Verify that API handles searches with a very long query.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/search?query=ThisIsAVeryLongSearchQueryThatExceedsTypicalLimitsAndTestsTheAPIsAbilityToHandleLargeInputsWithoutCrashingOrReturningAnError",
                "expected_status": true
            },
            {
                "test_case_name": "Search with a negative limit",
                "description": "Verify that API handles searches with a negative limit.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/search?query=smartphone&limit=-1",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Update Order Status",
            "method": "PUT",
            "url": "https://api.example.com/v1/orders/{order_id}/status",
            "body": {
                "status": "delivered",
                "tracking_number": "TRK123456789",
                "carrier": "FedEx"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer staff_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Update order status with carrier containing special characters",
                "description": "Verify that the API handles carrier values with special characters.",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer staff_token"
                    }
                ],
                "url": "https://api.example.com/v1/orders/ORD-12345/status",
                "body": {
                    "status": "delivered",
                    "tracking_number": "TRK123456789",
                    "carrier": "FedEx@123"
                },
                "expected_status": true
            }
        ]
    },
    {
        "input": {
            "name": "Get User Profile",
            "method": "GET",
            "url": "https://api.example.com/v1/users/{user_id}",
            "params": [
                {
                    "key": "include_details",
                    "value": "true"
                }
            ],
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer token123"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Retrieve user profile with missing user_id",
                "description": "Verify the API returns an error when the user_id is missing from the URL.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer token123"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/users/?include_details=true",
                "expected_status": false
            },
            {
                "test_case_name": "Request user profile with case-insensitive Authorization header",
                "description": "Check if the API correctly handles case-insensitive authorization headers.",
                "method": "GET",
                "headers": [
                    {
                        "key": "authorization",
                        "value": "Bearer token123"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/users/123?include_details=true",
                "expected_status": true
            }
        ]
    },
    {
        "input": {
            "name": "Create Product",
            "method": "POST",
            "url": "https://api.example.com/v1/products",
            "body": {
                "name": "Tablet",
                "price": 299.99,
                "description": "Latest model tablet",
                "category": "electronics",
                "inventory": 50
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Create product with oversized description",
                "description": "Verify that the API rejects product descriptions exceeding maximum character limits.",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/products",
                "body": {
                    "name": "Tablet",
                    "price": 299.99,
                    "description": "This is an extremely long product description that far exceeds the maximum allowed characters for this field. It is designed to test the API's ability to handle and reject excessively long input strings to prevent potential security vulnerabilities and ensure data integrity.",
                    "category": "electronics",
                    "inventory": 50
                },
                "expected_status": false
            },
            {
                "test_case_name": "Create product with price as a string",
                "description": "Verify that API rejects a price if it is given as a string.",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/products",
                "body": {
                    "name": "Tablet",
                    "price": "299.99",
                    "description": "Latest model tablet",
                    "category": "electronics",
                    "inventory": 50
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Update Order Status",
            "method": "PUT",
            "url": "https://api.example.com/v1/orders/{order_id}/status",
            "body": {
                "status": "shipped",
                "tracking_number": "TRK123456789",
                "carrier": "FedEx"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer staff_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Update order status with an empty status value",
                "description": "Verify that the API rejects an empty status value.",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer staff_token"
                    }
                ],
                "url": "https://api.example.com/v1/orders/ORD-12345/status",
                "body": {
                    "status": "",
                    "tracking_number": "TRK123456789",
                    "carrier": "FedEx"
                },
                "expected_status": false
            },
            {
                "test_case_name": "Update order status without Content-Type header",
                "description": "Verify that the API returns an error if the Content-Type header is missing during a status update.",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer staff_token"
                    }
                ],
                "url": "https://api.example.com/v1/orders/ORD-12345/status",
                "body": {
                    "status": "shipped",
                    "tracking_number": "TRK123456789",
                    "carrier": "FedEx"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Delete Comment",
            "method": "DELETE",
            "url": "https://api.example.com/v1/comments/{comment_id}",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ],
            "params": [
                {
                    "key": "force",
                    "value": "true"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Delete comment with force parameter set to false",
                "description": "Verify the API's behavior when the force parameter is explicitly set to false.",
                "method": "DELETE",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/comments/456?force=false",
                "expected_status": false
            },
            {
                "test_case_name": "Attempt to delete comment with modified URL",
                "description": "Verify that the API handles requests with modified URLs.",
                "method": "DELETE",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/comments/456/extra?force=true",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Search Products",
            "method": "GET",
            "url": "https://api.example.com/v1/products/search",
            "params": [
                {
                    "key": "query",
                    "value": "smartphone"
                },
                {
                    "key": "category",
                    "value": "electronics"
                },
                {
                    "key": "min_price",
                    "value": "200"
                },
                {
                    "key": "max_price",
                    "value": "800"
                },
                {
                    "key": "sort",
                    "value": "price_asc"
                },
                {
                    "key": "limit",
                    "value": "20"
                },
                {
                    "key": "page",
                    "value": "1"
                }
            ],
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Search with min_price greater than actual product price",
                "description": "Verify the API's response when searching with a minimum price greater than the actual product prices.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/search?query=smartphone&min_price=1000",
                "expected_status": true
            },
            {
                "test_case_name": "Search products with multiple category parameters",
                "description": "Verify that API handles searches with multiple category parameters.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/search?query=smartphone&category=electronics&category=gadgets",
                "expected_status": true
            },
            {
                "test_case_name": "Search with a very small page number (0)",
                "description": "Verify that API handles searches with a very small page number (0).",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/search?query=smartphone&page=0",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Update Order Status",
            "method": "PUT",
            "url": "https://api.example.com/v1/orders/{order_id}/status",
            "body": {
                "status": "pending",
                "tracking_number": "TRK123456789",
                "carrier": "FedEx"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer staff_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Update order status with different staff_token",
                "description": "Verify that order status can be updated with different staff_token",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer staff_token_2"
                    }
                ],
                "url": "https://api.example.com/v1/orders/ORD-12345/status",
                "body": {
                    "status": "pending",
                    "tracking_number": "TRK123456789",
                    "carrier": "FedEx"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get User Profile",
            "method": "GET",
            "url": "https://api.example.com/v1/users/{user_id}",
            "params": [
                {
                    "key": "include_details",
                    "value": "true"
                }
            ],
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer token123"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Retrieve user with 'include_details' set to false",
                "description": "Verify response when 'include_details' is set to false.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer token123"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/users/123?include_details=false",
                "expected_status": true
            },
            {
                "test_case_name": "Request with an unsupported header",
                "description": "Check behavior when an unsupported header is included.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer token123"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    },
                    {
                        "key": "X-Unsupported",
                        "value": "somevalue"
                    }
                ],
                "url": "https://api.example.com/v1/users/123?include_details=true",
                "expected_status": true
            }
        ]
    },
    {
        "input": {
            "name": "Create Product",
            "method": "POST",
            "url": "https://api.example.com/v1/products",
            "body": {
                "name": "Tablet",
                "price": 299.99,
                "description": "Latest model tablet",
                "category": "electronics",
                "inventory": 50
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Create product with price having many decimal places",
                "description": "Verify the API handles prices with more than two decimal places.",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/products",
                "body": {
                    "name": "Tablet",
                    "price": 299.9999,
                    "description": "Latest model tablet",
                    "category": "electronics",
                    "inventory": 50
                },
                "expected_status": true
            },
            {
                "test_case_name": "Create product with category as number",
                "description": "Verify the API rejects categories with an integer value.",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/products",
                "body": {
                    "name": "Tablet",
                    "price": 299.99,
                    "description": "Latest model tablet",
                    "category": 12345,
                    "inventory": 50
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Update Order Status",
            "method": "PUT",
            "url": "https://api.example.com/v1/orders/{order_id}/status",
            "body": {
                "status": "shipped",
                "tracking_number": "TRK123456789",
                "carrier": "FedEx"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer staff_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Update order status with a very long carrier name",
                "description": "Verify that the API handles an extremely long carrier name.",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer staff_token"
                    }
                ],
                "url": "https://api.example.com/v1/orders/ORD-12345/status",
                "body": {
                    "status": "shipped",
                    "tracking_number": "TRK123456789",
                    "carrier": "ThisIsAnExtremelyLongCarrierNameThatExceedsTypicalLimits"
                },
                "expected_status": false
            },
            {
                "test_case_name": "Update order status to the same status",
                "description": "Verify that updating an order with the same status does not cause issues.",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer staff_token"
                    }
                ],
                "url": "https://api.example.com/v1/orders/ORD-12345/status",
                "body": {
                    "status": "shipped",
                    "tracking_number": "TRK123456789",
                    "carrier": "FedEx"
                },
                "expected_status": true
            }
        ]
    },
    {
        "input": {
            "name": "Delete Comment",
            "method": "DELETE",
            "url": "https://api.example.com/v1/comments/{comment_id}",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ],
            "params": [
                {
                    "key": "force",
                    "value": "true"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Attempt to delete comment with extra parameter",
                "description": "Verify the API's response when the delete URL has additional unexpected parameters.",
                "method": "DELETE",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/comments/456?force=true&extra=true",
                "expected_status": true
            },
            {
                "test_case_name": "Delete comment with different case 'force' parameter",
                "description": "Verify that the API handles the 'force' parameter regardless of case (e.g., FORCE, Force).",
                "method": "DELETE",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/comments/456?FORCE=true",
                "expected_status": true
            }
        ]
    },
    {
        "input": {
            "name": "Search Products",
            "method": "GET",
            "url": "https://api.example.com/v1/products/search",
            "params": [
                {
                    "key": "query",
                    "value": "smartphone"
                },
                {
                    "key": "category",
                    "value": "electronics"
                },
                {
                    "key": "min_price",
                    "value": "200"
                },
                {
                    "key": "max_price",
                    "value": "800"
                },
                {
                    "key": "sort",
                    "value": "price_asc"
                },
                {
                    "key": "limit",
                    "value": "20"
                },
                {
                    "key": "page",
                    "value": "1"
                }
            ],
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Search products with whitespace in category parameter",
                "description": "Verify the handling of whitespace in the category parameter.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/search?query=smartphone&category=electronics%20gadgets",
                "expected_status": true
            },
            {
                "test_case_name": "Search for products with zero limit",
                "description": "Verify API handles requests to return zero products.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/search?query=smartphone&limit=0",
                "expected_status": true
            },
            {
                "test_case_name": "Search products with SQL Injection in the category",
                "description": "Verify that the API handles SQL Injection in the category.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/search?query=smartphone&category=electronics' OR '1'='1",
                "expected_status": false
            },
            {
                "test_case_name": "Perform Search with Empty Category Value",
                "description": "Validate that the search function correctly handles queries that specify an empty string for the category.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/search?query=example&category=",
                "expected_status": true
            }
        ]
    },
    {
        "input": {
            "name": "Create User",
            "method": "POST",
            "url": "https://api.example.com/v1/users",
            "body": {
                "username": "testuser",
                "password": "password123",
                "email": "test@example.com"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Try To Create User with the already existed username",
                "description": "The new username is already taken, so this should return false or an error",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/users",
                "body": {
                    "username": "testuser",
                    "password": "password123",
                    "email": "test@example.com"
                },
                "expected_status": false
            },
            {
                "test_case_name": "Create a user with the name test_user",
                "description": "New user",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/users",
                "body": {
                    "username": "test_user",
                    "password": "password123",
                    "email": "test2@example.com"
                },
                "expected_status": true
            }
        ]
    },
    {
        "input": {
            "name": "Update User Email",
            "method": "PUT",
            "url": "https://api.example.com/v1/users/{user_id}/email",
            "body": {
                "email": "newemail@example.com"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer token123"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Updating User with email with the same as before",
                "description": "No changes should occur if the email is the same",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer token123"
                    }
                ],
                "url": "https://api.example.com/v1/users/test_user/email",
                "body": {
                    "email": "newemail@example.com"
                },
                "expected_status": false
            },
            {
                "test_case_name": "No such User to update",
                "description": "Should return false since no such user exists",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer token123"
                    }
                ],
                "url": "https://api.example.com/v1/users/none/email",
                "body": {
                    "email": "test_user@example.com"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Logout User",
            "method": "POST",
            "url": "https://api.example.com/v1/auth/logout",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer token123"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "User Logout with valid token",
                "description": "Validate the API response after logging out",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer token123"
                    }
                ],
                "url": "https://api.example.com/v1/auth/logout",
                "expected_status": true
            },
            {
                "test_case_name": "User Logout without token",
                "description": "API response after logging out without token",
                "method": "POST",
                "url": "https://api.example.com/v1/auth/logout",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Create User",
            "method": "POST",
            "url": "https://api.example.com/v1/users",
            "body": {
                "username": "newuser",
                "password": "securePassword123",
                "email": "newuser@example.com"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create a new user",
                "description": "Verify that a new user can be created with valid credentials",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/users",
                "body": {
                    "username": "newuser",
                    "password": "securePassword123",
                    "email": "newuser@example.com"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to create user with weak password",
                "description": "Verify that the API enforces strong password policies",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/users",
                "body": {
                    "username": "weakuser",
                    "password": "weak",
                    "email": "weakuser@example.com"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Login User",
            "method": "POST",
            "url": "https://api.example.com/v1/auth/login",
            "body": {
                "username": "existinguser",
                "password": "validPassword"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully log in user",
                "description": "Verify that an existing user can log in with valid credentials",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/auth/login",
                "body": {
                    "username": "existinguser",
                    "password": "validPassword"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Invalid login attempt with wrong password",
                "description": "Verify that the API rejects login attempts with incorrect passwords",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/auth/login",
                "body": {
                    "username": "existinguser",
                    "password": "wrongPassword"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Product Details",
            "method": "GET",
            "url": "https://api.example.com/v1/products/{product_id}",
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve product details with valid ID",
                "description": "Verify that product details are retrieved for a valid product ID",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/123",
                "expected_status": true
            },
            {
                "test_case_name": "Product not found with invalid ID",
                "description": "Verify that the API returns an error for a non-existent product ID",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/999999",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Update Product",
            "method": "PUT",
            "url": "https://api.example.com/v1/products/{product_id}",
            "body": {
                "name": "Updated Product Name",
                "price": 599.99
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully update product",
                "description": "Verify that a product's details can be updated with valid data",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/products/123",
                "body": {
                    "name": "Updated Product Name",
                    "price": 599.99
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to update product without authorization",
                "description": "Verify that the API rejects unauthorized product update attempts",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/123",
                "body": {
                    "name": "Updated Product Name",
                    "price": 599.99
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Delete Product",
            "method": "DELETE",
            "url": "https://api.example.com/v1/products/{product_id}",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully delete a product",
                "description": "Verify that a product can be deleted with admin authorization",
                "method": "DELETE",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/products/123",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to delete a non-existent product",
                "description": "Verify that the API handles attempts to delete non-existent products",
                "method": "DELETE",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/products/999999",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "List Orders",
            "method": "GET",
            "url": "https://api.example.com/v1/orders",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer staff_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully list orders",
                "description": "Verify that orders can be listed with staff authorization",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer staff_token"
                    }
                ],
                "url": "https://api.example.com/v1/orders",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to list orders without authorization",
                "description": "Verify that the API rejects unauthorized attempts to list orders",
                "method": "GET",
                "url": "https://api.example.com/v1/orders",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Create Order",
            "method": "POST",
            "url": "https://api.example.com/v1/orders",
            "body": {
                "customer_id": "123",
                "items": [
                    {
                        "product_id": "456",
                        "quantity": 1
                    }
                ]
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create order",
                "description": "Verify that an order can be created with valid customer and item data",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/orders",
                "body": {
                    "customer_id": "123",
                    "items": [
                        {
                            "product_id": "456",
                            "quantity": 1
                        }
                    ]
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to create order with invalid customer ID",
                "description": "Verify that the API rejects order creation with invalid customer IDs",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/orders",
                "body": {
                    "customer_id": "invalid",
                    "items": [
                        {
                            "product_id": "456",
                            "quantity": 1
                        }
                    ]
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Order Details",
            "method": "GET",
            "url": "https://api.example.com/v1/orders/{order_id}",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve order details",
                "description": "Verify that order details can be retrieved with a valid order ID",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/orders/ORD-123",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to retrieve details of non-existent order",
                "description": "Verify that the API handles attempts to retrieve non-existent orders",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/orders/NONEXISTENT",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Cancel Order",
            "method": "PUT",
            "url": "https://api.example.com/v1/orders/{order_id}/cancel",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully cancel an order",
                "description": "Verify that an order can be cancelled with proper authorization",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/orders/ORD-123/cancel",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to cancel an already shipped order",
                "description": "Verify that the API prevents cancelling already shipped orders",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/orders/SHIPPED-456/cancel",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Update Password",
            "method": "PUT",
            "url": "https://api.example.com/v1/users/{user_id}/password",
            "body": {
                "old_password": "oldPassword",
                "new_password": "newSecurePassword"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully update password with correct credentials",
                "description": "Verify that a user can update their password with valid old credentials",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/password",
                "body": {
                    "old_password": "oldPassword",
                    "new_password": "newSecurePassword"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to update password with incorrect old password",
                "description": "Verify that the API rejects password updates with incorrect old password",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/password",
                "body": {
                    "old_password": "incorrectPassword",
                    "new_password": "newSecurePassword"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Update Email",
            "method": "PUT",
            "url": "https://api.example.com/v1/users/{user_id}/email",
            "body": {
                "email": "newemail@example.com"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully update email with valid format",
                "description": "Verify that a user can update their email with a valid email format",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/email",
                "body": {
                    "email": "newemail@example.com"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to update email with invalid format",
                "description": "Verify that the API rejects email updates with an invalid email format",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/email",
                "body": {
                    "email": "invalid-email"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Update Shipping Details",
            "method": "PUT",
            "url": "https://api.example.com/v1/users/{user_id}/shipping",
            "body": {
                "address": "123 New Street",
                "city": "New York",
                "zip_code": "10001"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully update shipping details",
                "description": "Verify that a user can update their shipping details with valid information",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/shipping",
                "body": {
                    "address": "123 New Street",
                    "city": "New York",
                    "zip_code": "10001"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to update shipping details with missing required field",
                "description": "Verify that the API returns an error when a required field is missing",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/shipping",
                "body": {
                    "address": "123 New Street",
                    "city": "New York"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Update Product Price",
            "method": "PUT",
            "url": "https://api.example.com/v1/products/{product_id}/price",
            "body": {
                "price": 699.99
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully update product price",
                "description": "Verify that a product price can be updated with a valid price value",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/products/456/price",
                "body": {
                    "price": 699.99
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to update product price with invalid value",
                "description": "Verify that the API rejects price updates with an invalid price value",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/products/456/price",
                "body": {
                    "price": "invalid"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Create Review",
            "method": "POST",
            "url": "https://api.example.com/v1/products/{product_id}/reviews",
            "body": {
                "rating": 5,
                "comment": "Excellent product!"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create a product review",
                "description": "Verify that a user can create a product review with valid data",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/products/456/reviews",
                "body": {
                    "rating": 5,
                    "comment": "Excellent product!"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to create review with rating out of range",
                "description": "Verify that the API rejects reviews with ratings outside the allowed range",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/products/456/reviews",
                "body": {
                    "rating": 10,
                    "comment": "Too good to be true!"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Retrieve Cart",
            "method": "GET",
            "url": "https://api.example.com/v1/carts/{user_id}",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve user cart",
                "description": "Verify that a user's cart can be retrieved with valid authentication",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/carts/123",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to retrieve cart without authorization",
                "description": "Verify that the API rejects unauthorized attempts to retrieve a user's cart",
                "method": "GET",
                "url": "https://api.example.com/v1/carts/123",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Add To Cart",
            "method": "POST",
            "url": "https://api.example.com/v1/carts/{user_id}/items",
            "body": {
                "product_id": "456",
                "quantity": 2
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully add item to cart",
                "description": "Verify that an item can be added to the cart with valid data",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/carts/123/items",
                "body": {
                    "product_id": "456",
                    "quantity": 2
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to add item with invalid product id",
                "description": "Verify that the API rejects adding items with invalid product IDs",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/carts/123/items",
                "body": {
                    "product_id": "invalid",
                    "quantity": 2
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Remove From Cart",
            "method": "DELETE",
            "url": "https://api.example.com/v1/carts/{user_id}/items/{product_id}",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully remove item from cart",
                "description": "Verify that an item can be removed from the cart with valid data",
                "method": "DELETE",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/carts/123/items/456",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to remove non-existent item from cart",
                "description": "Verify that the API handles attempts to remove non-existent items",
                "method": "DELETE",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/carts/123/items/999999",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Checkout",
            "method": "POST",
            "url": "https://api.example.com/v1/checkout/{user_id}",
            "body": {
                "payment_method": "credit_card"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully initiate checkout",
                "description": "Verify that checkout process can be initiated with valid payment method",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/checkout/123",
                "body": {
                    "payment_method": "credit_card"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to checkout with invalid payment method",
                "description": "Verify that the API rejects checkout attempts with invalid payment methods",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/checkout/123",
                "body": {
                    "payment_method": "invalid"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Retrieve Order History",
            "method": "GET",
            "url": "https://api.example.com/v1/users/{user_id}/orders",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve order history",
                "description": "Verify that a user's order history can be retrieved with valid authentication",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/orders",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to retrieve order history without authorization",
                "description": "Verify that the API rejects unauthorized attempts to retrieve order history",
                "method": "GET",
                "url": "https://api.example.com/v1/users/123/orders",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Add Product To Wishlist",
            "method": "POST",
            "url": "https://api.example.com/v1/wishlist/{user_id}/{product_id}",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully add a product to the wishlist",
                "description": "Verify a product can be added to the wishlist",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/wishlist/123/456",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to add a product to wishlist without authorization",
                "description": "Verify user cannot add product to wishlist without proper auth",
                "method": "POST",
                "url": "https://api.example.com/v1/wishlist/123/456",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Remove Product From Wishlist",
            "method": "DELETE",
            "url": "https://api.example.com/v1/wishlist/{user_id}/{product_id}",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully remove a product from wishlist",
                "description": "Verify that an item can be removed from the wishlist",
                "method": "DELETE",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/wishlist/123/456",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to remove a product from wishlist without authorization",
                "description": "Verify user cannot remove product from wishlist without auth",
                "method": "DELETE",
                "url": "https://api.example.com/v1/wishlist/123/456",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Product Recommendations",
            "method": "GET",
            "url": "https://api.example.com/v1/recommendations/{user_id}",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully get product recommendations",
                "description": "Verify user can get a list of product recommendations",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/recommendations/123",
                "expected_status": true
            },
            {
                "test_case_name": "Get product recommendations for new user",
                "description": "Get product recommendations for a new user with little history",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/recommendations/newuser",
                "expected_status": true
            }
        ]
    },
    {
        "input": {
            "name": "Submit Product Rating",
            "method": "POST",
            "url": "https://api.example.com/v1/products/{product_id}/ratings",
            "body": {
                "rating": 4,
                "comment": "A pretty decent product."
            },
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                },
                {
                    "key": "Content-Type",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully submit a product rating",
                "description": "User can rate a product",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    },
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/123/ratings",
                "body": {
                    "rating": 4,
                    "comment": "A pretty decent product."
                },
                "expected_status": true
            },
            {
                "test_case_name": "Submit product rating without comment",
                "description": "User can rate a product without providing a comment",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    },
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/123/ratings",
                "body": {
                    "rating": 5
                },
                "expected_status": true
            }
        ]
    },
    {
        "input": {
            "name": "Apply Discount Code",
            "method": "POST",
            "url": "https://api.example.com/v1/checkout/apply_discount",
            "body": {
                "discount_code": "SUMMER20"
            },
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                },
                {
                    "key": "Content-Type",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully apply a valid discount code",
                "description": "A valid discount code can be applied",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    },
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/checkout/apply_discount",
                "body": {
                    "discount_code": "SUMMER20"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to apply an invalid discount code",
                "description": "Applying an invalid discount code does not work",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    },
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/checkout/apply_discount",
                "body": {
                    "discount_code": "INVALID"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "View Recently Viewed Products",
            "method": "GET",
            "url": "https://api.example.com/v1/users/{user_id}/recent_views",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully view recently viewed products",
                "description": "Verify that a list of recently viewed product can be retrieved",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/recent_views",
                "expected_status": true
            },
            {
                "test_case_name": "Retrieve recent views for a user without any recent history",
                "description": "Verify a new user with no recent history returns empty set",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/newuser/recent_views",
                "expected_status": true
            }
        ]
    },
    {
        "input": {
            "name": "Subscribe to Email Notifications",
            "method": "POST",
            "url": "https://api.example.com/v1/notifications/subscribe",
            "body": {
                "email": "user@example.com",
                "notification_type": "promotions"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully subscribe to email notifications",
                "description": "Verify a user can successfully subscribe to email notifications",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/notifications/subscribe",
                "body": {
                    "email": "user@example.com",
                    "notification_type": "promotions"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to subscribe with an invalid email",
                "description": "Verify subsciption does not work with an invalid email",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/notifications/subscribe",
                "body": {
                    "email": "invalid-email",
                    "notification_type": "promotions"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Unsubscribe from Email Notifications",
            "method": "POST",
            "url": "https://api.example.com/v1/notifications/unsubscribe",
            "body": {
                "email": "user@example.com",
                "notification_type": "promotions"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully unsubscribe from email notifications",
                "description": "Verify that unsubscribing from notifications works",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/notifications/unsubscribe",
                "body": {
                    "email": "user@example.com",
                    "notification_type": "promotions"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to unsubscribe with incorrect email",
                "description": "Verify unsubscribing with incorrect email does not work",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/notifications/unsubscribe",
                "body": {
                    "email": "incorrect@example.com",
                    "notification_type": "promotions"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get User Points Balance",
            "method": "GET",
            "url": "https://api.example.com/v1/users/{user_id}/points",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully get user points balance",
                "description": "Verify user can check his/her current points balance",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/points",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to get user points without authorization",
                "description": "Verify the API rejects attempts without the required token",
                "method": "GET",
                "url": "https://api.example.com/v1/users/123/points",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Redeem Points for Discount",
            "method": "POST",
            "url": "https://api.example.com/v1/users/{user_id}/redeem_points",
            "body": {
                "points_to_redeem": 100
            },
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                },
                {
                    "key": "Content-Type",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully redeem points for a discount",
                "description": "Points can be redeemed for discount",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    },
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/redeem_points",
                "body": {
                    "points_to_redeem": 100
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to redeem more points than available",
                "description": "Verify a user can't redeem points above the available balance",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    },
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/redeem_points",
                "body": {
                    "points_to_redeem": 1000000
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Request Password Reset",
            "method": "POST",
            "url": "https://api.example.com/v1/auth/reset_password",
            "body": {
                "email": "user@example.com"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Request password reset for a valid email",
                "description": "Verify that a password reset request is successful for a registered email",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/auth/reset_password",
                "body": {
                    "email": "user@example.com"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt password reset for a non-existent email",
                "description": "Verify that requesting a password reset for a non-existent email is handled gracefully",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/auth/reset_password",
                "body": {
                    "email": "nonexistent@example.com"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Verify Password Reset Token",
            "method": "GET",
            "url": "https://api.example.com/v1/auth/verify_token/{token}",
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully verify a valid password reset token",
                "description": "Verify a valid password reset token is correctly verified",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/auth/verify_token/valid_token",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to verify an invalid or expired password reset token",
                "description": "Verify that the API returns an error for an invalid/expired token",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/auth/verify_token/invalid_token",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Create a Blog Post",
            "method": "POST",
            "url": "https://api.example.com/v1/blog/posts",
            "body": {
                "title": "Test Blog Post",
                "content": "This is a test content."
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer author_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create a blog post with valid data",
                "description": "Verify a blog post is created successfully with required fields",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer author_token"
                    }
                ],
                "url": "https://api.example.com/v1/blog/posts",
                "body": {
                    "title": "Test Blog Post",
                    "content": "This is a test content."
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to create a blog post without title",
                "description": "Verify that API returns an error when required title is missing",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer author_token"
                    }
                ],
                "url": "https://api.example.com/v1/blog/posts",
                "body": {
                    "content": "This is a test content."
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Update Blog Post",
            "method": "PUT",
            "url": "https://api.example.com/v1/blog/posts/{post_id}",
            "body": {
                "content": "Updated blog content."
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer author_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully update a blog post",
                "description": "Verify content of a specific blog post can be updated",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer author_token"
                    }
                ],
                "url": "https://api.example.com/v1/blog/posts/123",
                "body": {
                    "content": "Updated blog content."
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to update a non-existent blog post",
                "description": "Attempt to update a blog with wrong id",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer author_token"
                    }
                ],
                "url": "https://api.example.com/v1/blog/posts/99999",
                "body": {
                    "content": "Updated blog content."
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Delete Blog Post",
            "method": "DELETE",
            "url": "https://api.example.com/v1/blog/posts/{post_id}",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer author_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully delete a blog post",
                "description": "Verify that a user can delete a blog post with author token",
                "method": "DELETE",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer author_token"
                    }
                ],
                "url": "https://api.example.com/v1/blog/posts/123",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to delete a blog post with invalid auth",
                "description": "Attempting to delete a blog with other than author token",
                "method": "DELETE",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer invalid_token"
                    }
                ],
                "url": "https://api.example.com/v1/blog/posts/123",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "List Blog Posts",
            "method": "GET",
            "url": "https://api.example.com/v1/blog/posts",
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully list blog posts",
                "description": "User can see the list of the blog posts",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/blog/posts",
                "expected_status": true
            },
            {
                "test_case_name": "List blog posts with a specific tag",
                "description": "Test if the API returns blog posts for a given tag.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/blog/posts?tag=technology",
                "expected_status": true
            }
        ]
    },
    {
        "input": {
            "name": "Comment on Blog Post",
            "method": "POST",
            "url": "https://api.example.com/v1/blog/posts/{post_id}/comments",
            "body": {
                "comment": "Great post!"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully comment on a blog post",
                "description": "Verify a registered user can post the comment",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/blog/posts/123/comments",
                "body": {
                    "comment": "Great post!"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to comment on a non-existent blog post",
                "description": "Check posting comment on wrong blog does not work",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/blog/posts/99999/comments",
                "body": {
                    "comment": "Great post!"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Like Blog Post",
            "method": "POST",
            "url": "https://api.example.com/v1/blog/posts/{post_id}/like",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully like a blog post",
                "description": "Verify a registered user can like a post",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/blog/posts/123/like",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to like a non-existent blog post",
                "description": "Liking a wrong blog id",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/blog/posts/99999/like",
                "expected_status": false
            }
        ]
    }
]