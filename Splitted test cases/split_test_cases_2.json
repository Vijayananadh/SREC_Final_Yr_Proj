[
    {
        "input": {
            "name": "Register User with OAuth",
            "method": "POST",
            "url": "https://api.example.com/v1/auth/oauth/register",
            "body": {
                "provider": "google",
                "access_token": "google_access_token"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successful OAuth registration",
                "description": "Verify user registration through OAuth with valid provider and token",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/auth/oauth/register",
                "body": {
                    "provider": "google",
                    "access_token": "valid_google_token"
                },
                "expected_status": true
            },
            {
                "test_case_name": "OAuth registration with invalid provider",
                "description": "Verify the API rejects registration with an unsupported OAuth provider",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/auth/oauth/register",
                "body": {
                    "provider": "invalid_provider",
                    "access_token": "any_token"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Refresh Authentication Token",
            "method": "POST",
            "url": "https://api.example.com/v1/auth/refresh_token",
            "body": {
                "refresh_token": "valid_refresh_token"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully refresh authentication token",
                "description": "Verify that a user's auth token can be refreshed with a valid refresh token",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/auth/refresh_token",
                "body": {
                    "refresh_token": "valid_refresh_token"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to refresh with an invalid refresh token",
                "description": "Verify the API rejects refresh attempts with an invalid token",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/auth/refresh_token",
                "body": {
                    "refresh_token": "invalid_refresh_token"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Report Content",
            "method": "POST",
            "url": "https://api.example.com/v1/reports/content",
            "body": {
                "content_id": "123",
                "content_type": "comment",
                "reason": "inappropriate"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully report content",
                "description": "Verify a user can successfully report content for moderation",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/reports/content",
                "body": {
                    "content_id": "123",
                    "content_type": "comment",
                    "reason": "inappropriate"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Report content with invalid reason",
                "description": "Verify the API validates and rejects invalid reporting reasons",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/reports/content",
                "body": {
                    "content_id": "123",
                    "content_type": "comment",
                    "reason": "invalid_reason"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Retrieve Moderation Queue",
            "method": "GET",
            "url": "https://api.example.com/v1/moderation/queue",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer moderator_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve moderation queue",
                "description": "Verify moderators can retrieve a list of reported content for review",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer moderator_token"
                    }
                ],
                "url": "https://api.example.com/v1/moderation/queue",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to retrieve moderation queue without moderator rights",
                "description": "Verify regular users can't access the moderation queue",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/moderation/queue",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Approve Content",
            "method": "POST",
            "url": "https://api.example.com/v1/moderation/approve",
            "body": {
                "content_id": "123",
                "content_type": "comment"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer moderator_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully approve reported content",
                "description": "Verify moderators can approve reported content",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer moderator_token"
                    }
                ],
                "url": "https://api.example.com/v1/moderation/approve",
                "body": {
                    "content_id": "123",
                    "content_type": "comment"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to approve content with wrong content_type",
                "description": "Moderators trying to approve content with other than comment content type",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer moderator_token"
                    }
                ],
                "url": "https://api.example.com/v1/moderation/approve",
                "body": {
                    "content_id": "123",
                    "content_type": "invalid_content"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Reject Content",
            "method": "POST",
            "url": "https://api.example.com/v1/moderation/reject",
            "body": {
                "content_id": "123",
                "content_type": "comment",
                "reason": "policy_violation"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer moderator_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully reject reported content",
                "description": "Verify that the content can be successfully rejected by a moderator",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer moderator_token"
                    }
                ],
                "url": "https://api.example.com/v1/moderation/reject",
                "body": {
                    "content_id": "123",
                    "content_type": "comment",
                    "reason": "policy_violation"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to reject content with missing content_id",
                "description": "Verify that API returns an error when content ID is missing",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer moderator_token"
                    }
                ],
                "url": "https://api.example.com/v1/moderation/reject",
                "body": {
                    "content_type": "comment",
                    "reason": "policy_violation"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Integrate Third-Party Service",
            "method": "POST",
            "url": "https://api.example.com/v1/integrations/connect",
            "body": {
                "service": "twitter",
                "api_key": "twitter_api_key",
                "api_secret": "twitter_api_secret"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully integrate third-party service",
                "description": "An admin can link a third-party service with proper credentials",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/integrations/connect",
                "body": {
                    "service": "twitter",
                    "api_key": "valid_twitter_key",
                    "api_secret": "valid_twitter_secret"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt integration with invalid credentials",
                "description": "Integration with an invalid credential returns false",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/integrations/connect",
                "body": {
                    "service": "twitter",
                    "api_key": "invalid_twitter_key",
                    "api_secret": "invalid_twitter_secret"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Integration Status",
            "method": "GET",
            "url": "https://api.example.com/v1/integrations/{service}/status",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully get integration status",
                "description": "Admin can view the integration status",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/integrations/twitter/status",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to view status without admin rights",
                "description": "Another user without admin rights trying to",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/integrations/twitter/status",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Revoke Third-Party Integration",
            "method": "DELETE",
            "url": "https://api.example.com/v1/integrations/{service}/revoke",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully revoke third-party integration",
                "description": "Revoking twitter integration",
                "method": "DELETE",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/integrations/twitter/revoke",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to revoke a non-existent integration",
                "description": "Verify that API returns an error when attempting to revoke an integration that doesn't exist",
                "method": "DELETE",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/integrations/invalid_service/revoke",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Add Product Review",
            "method": "POST",
            "url": "https://api.example.com/v1/products/{product_id}/reviews",
            "body": {
                "rating": 4,
                "comment": "Good value for money."
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully add a product review",
                "description": "Verify that a user can submit a review with valid details",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/products/123/reviews",
                "body": {
                    "rating": 4,
                    "comment": "Good value for money."
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt add product review with XSS",
                "description": "XSS in product review not possible",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/products/123/reviews",
                "body": {
                    "rating": 5,
                    "comment": "<script>alert('XSS')</script>"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Product Reviews",
            "method": "GET",
            "url": "https://api.example.com/v1/products/{product_id}/reviews",
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve product reviews",
                "description": "Verify that reviews for a product can be retrieved",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/123/reviews",
                "expected_status": true
            },
            {
                "test_case_name": "Retrieve reviews for non existent product",
                "description": "Reviews for the product not retrieved if product not found",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/404/reviews",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Add Product To Wishlist",
            "method": "POST",
            "url": "https://api.example.com/v1/users/{user_id}/wishlist/{product_id}",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully add product to wishlist",
                "description": "Product added to wishlit with user token",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/wishlist/456",
                "expected_status": true
            },
            {
                "test_case_name": "Add product to wishlit without token",
                "description": "Product is not added to wishlit without user token",
                "method": "POST",
                "url": "https://api.example.com/v1/users/123/wishlist/456",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Remove Product From Wishlist",
            "method": "DELETE",
            "url": "https://api.example.com/v1/users/{user_id}/wishlist/{product_id}",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully remove product from wishlist",
                "description": "Product is removed from wishlit",
                "method": "DELETE",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/wishlist/456",
                "expected_status": true
            },
            {
                "test_case_name": "Remove product from wishlist without user token",
                "description": "Product is not removed if not valid token",
                "method": "DELETE",
                "url": "https://api.example.com/v1/users/123/wishlist/456",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get User Cart",
            "method": "GET",
            "url": "https://api.example.com/v1/users/{user_id}/cart",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve user cart",
                "description": "Retrieve user cart with valid user token",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/cart",
                "expected_status": true
            },
            {
                "test_case_name": "Cart not retrieved without user token",
                "description": "Cart endpoint requires user token",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/cart",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Add Product To Cart",
            "method": "POST",
            "url": "https://api.example.com/v1/users/{user_id}/cart",
            "body": {
                "product_id": 456,
                "quantity": 1
            },
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                },
                {
                    "key": "Content-Type",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully add product to cart",
                "description": "Add product to cart with user token",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    },
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/cart",
                "body": {
                    "product_id": 456,
                    "quantity": 1
                },
                "expected_status": true
            },
            {
                "test_case_name": "Product not added if invalid data",
                "description": "Product requires require data to be added to cart",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    },
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/cart",
                "body": {
                    "product_id": 456
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Remove Product From Cart",
            "method": "DELETE",
            "url": "https://api.example.com/v1/users/{user_id}/cart/{product_id}",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully remove product from cart",
                "description": "Remove product from cart is successful",
                "method": "DELETE",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/cart/456",
                "expected_status": true
            },
            {
                "test_case_name": "Invalid credential for deleting product",
                "description": "Product is not deleted if credential is invalid",
                "method": "DELETE",
                "url": "https://api.example.com/v1/users/123/cart/456",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Proceed To Checkout",
            "method": "POST",
            "url": "https://api.example.com/v1/users/{user_id}/checkout",
            "body": {
                "shipping_address": "Some Address",
                "payment_method": "credit_card"
            },
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                },
                {
                    "key": "Content-Type",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Checkout completed with valid credit card",
                "description": "Checkout of the cart with valid data",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    },
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/checkout",
                "body": {
                    "shipping_address": "Some Address",
                    "payment_method": "credit_card"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Checkout not completed with invalid credit card",
                "description": "If the card info invalid checkout is not completed",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    },
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/checkout",
                "body": {
                    "shipping_address": "Some Address",
                    "payment_method": "invalid_card"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get User Order History",
            "method": "GET",
            "url": "https://api.example.com/v1/users/{user_id}/orders",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Get user order history with valid details",
                "description": "Order history retrieved if the user details valid",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/orders",
                "expected_status": true
            },
            {
                "test_case_name": "Order history not retrieved with invalid details",
                "description": "Endpoint is only accessed with valid user details",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer invalid_token"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/orders",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Order Details",
            "method": "GET",
            "url": "https://api.example.com/v1/orders/{order_id}",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Get order details with valid token",
                "description": "Order details retrieved with correct data",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/orders/ORD-123",
                "expected_status": true
            },
            {
                "test_case_name": "Order details not retrieved with invalid token",
                "description": "If user details not found",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer invalid_token"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/orders/ORD-123",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Cancel Order",
            "method": "PUT",
            "url": "https://api.example.com/v1/orders/{order_id}/cancel",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Order is canelled with correct details",
                "description": "The order is canelled",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/orders/ORD-123/cancel",
                "expected_status": true
            },
            {
                "test_case_name": "Invalid order details - Not canelled",
                "description": "Since the order is not found it is not canelled",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer invalid_token"
                    }
                ],
                "url": "https://api.example.com/v1/orders/ORD-123/cancel",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Create a Poll",
            "method": "POST",
            "url": "https://api.example.com/v1/polls",
            "body": {
                "question": "What is your favorite color?",
                "options": [
                    "Red",
                    "Blue",
                    "Green"
                ]
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create a poll with valid options",
                "description": "Verify that a poll can be created with valid question and options",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/polls",
                "body": {
                    "question": "What is your favorite color?",
                    "options": [
                        "Red",
                        "Blue",
                        "Green"
                    ]
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to create a poll with empty options",
                "description": "Verify that the API rejects creating a poll with empty options",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/polls",
                "body": {
                    "question": "What is your favorite color?",
                    "options": []
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Vote in a Poll",
            "method": "POST",
            "url": "https://api.example.com/v1/polls/{poll_id}/votes",
            "body": {
                "option": "Blue"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully cast a vote in a poll",
                "description": "Verify that a user can vote in a poll with a valid option",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/polls/123/votes",
                "body": {
                    "option": "Blue"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to vote with an invalid option",
                "description": "Verify that the API rejects voting with an invalid option",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/polls/123/votes",
                "body": {
                    "option": "Invalid"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Poll Results",
            "method": "GET",
            "url": "https://api.example.com/v1/polls/{poll_id}/results",
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve poll results",
                "description": "Verify that poll results can be retrieved",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/polls/123/results",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to retrieve results for a non-existent poll",
                "description": "Verify that the API returns an error for a non-existent poll",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/polls/99999/results",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Create a Forum Topic",
            "method": "POST",
            "url": "https://api.example.com/v1/forums/topics",
            "body": {
                "title": "New Topic",
                "content": "This is a new topic."
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create a forum topic",
                "description": "Verify that a user can create a new forum topic",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/forums/topics",
                "body": {
                    "title": "New Topic",
                    "content": "This is a new topic."
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to create a forum topic without title",
                "description": "Verify that the API rejects creating a topic without a title",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/forums/topics",
                "body": {
                    "content": "This is a new topic."
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Reply to a Forum Topic",
            "method": "POST",
            "url": "https://api.example.com/v1/forums/topics/{topic_id}/replies",
            "body": {
                "content": "This is a reply to the topic."
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully reply to a forum topic",
                "description": "Verify that a user can reply to a forum topic",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/forums/topics/123/replies",
                "body": {
                    "content": "This is a reply to the topic."
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to reply to a non-existent topic",
                "description": "Verify that the API returns an error for a non-existent topic",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/forums/topics/99999/replies",
                "body": {
                    "content": "This is a reply to the topic."
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Forum Topics",
            "method": "GET",
            "url": "https://api.example.com/v1/forums/topics",
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve forum topics",
                "description": "Verify that forum topics can be retrieved",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/forums/topics",
                "expected_status": true
            },
            {
                "test_case_name": "Retrieve topics with pagination",
                "description": "Verify that topics can be retrieved with pagination",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/forums/topics?limit=10&page=1",
                "expected_status": true
            }
        ]
    },
    {
        "input": {
            "name": "Create a Support Ticket",
            "method": "POST",
            "url": "https://api.example.com/v1/support/tickets",
            "body": {
                "subject": "Issue with Product",
                "description": "Product not working as expected."
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create a support ticket",
                "description": "Verify that a user can create a support ticket",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/support/tickets",
                "body": {
                    "subject": "Issue with Product",
                    "description": "Product not working as expected."
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to create a ticket without subject",
                "description": "Verify that the API rejects creating a ticket without a subject",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/support/tickets",
                "body": {
                    "description": "Product not working as expected."
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Support Ticket Status",
            "method": "GET",
            "url": "https://api.example.com/v1/support/tickets/{ticket_id}/status",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve ticket status",
                "description": "Verify that a user can retrieve the status of their support ticket",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/support/tickets/123/status",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to retrieve status of non-existent ticket",
                "description": "Verify that the API returns an error for a non-existent ticket",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/support/tickets/99999/status",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Update Support Ticket",
            "method": "PUT",
            "url": "https://api.example.com/v1/support/tickets/{ticket_id}",
            "body": {
                "description": "Updated description of the issue."
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully update a support ticket",
                "description": "Verify that a user can update their support ticket",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/support/tickets/123",
                "body": {
                    "description": "Updated description of the issue."
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to update a non-existent ticket",
                "description": "Verify that the API returns an error for a non-existent ticket",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/support/tickets/99999",
                "body": {
                    "description": "Updated description of the issue."
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Close Support Ticket",
            "method": "PUT",
            "url": "https://api.example.com/v1/support/tickets/{ticket_id}/close",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully close a support ticket",
                "description": "Verify that a user can close their support ticket",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/support/tickets/123/close",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to close a non-existent ticket",
                "description": "Verify that the API returns an error for a non-existent ticket",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/support/tickets/99999/close",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Create a Knowledge Base Article",
            "method": "POST",
            "url": "https://api.example.com/v1/knowledgebase/articles",
            "body": {
                "title": "How to Use Our Product",
                "content": "Step-by-step guide to using our product."
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create a knowledge base article",
                "description": "Verify that an admin can create a new knowledge base article",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/knowledgebase/articles",
                "body": {
                    "title": "How to Use Our Product",
                    "content": "Step-by-step guide to using our product."
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to create an article without title",
                "description": "Verify that the API rejects creating an article without a title",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/knowledgebase/articles",
                "body": {
                    "content": "Step-by-step guide to using our product."
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Reset User Password via Admin",
            "method": "POST",
            "url": "https://api.example.com/v1/admin/users/{user_id}/reset_password",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully reset user password",
                "description": "Verify that an admin can reset a user's password.",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/admin/users/123/reset_password",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to reset password with invalid admin token",
                "description": "Verify that an unauthorized user cannot reset a user's password.",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer invalid_token"
                    }
                ],
                "url": "https://api.example.com/v1/admin/users/123/reset_password",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Promote User to Admin",
            "method": "PUT",
            "url": "https://api.example.com/v1/admin/users/{user_id}/promote",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer super_admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully promote user to admin",
                "description": "Verify that a super admin can promote a user to admin.",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer super_admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/admin/users/456/promote",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to promote user with insufficient permissions",
                "description": "Verify that a regular admin cannot promote a user to admin.",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/admin/users/456/promote",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Create Announcement",
            "method": "POST",
            "url": "https://api.example.com/v1/announcements",
            "body": {
                "title": "New Announcement",
                "content": "Important information for all users."
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create announcement",
                "description": "Verify that an admin can create an announcement.",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/announcements",
                "body": {
                    "title": "New Announcement",
                    "content": "Important information for all users."
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to create announcement without required fields",
                "description": "Verify that API rejects announcement creation without all required fields.",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/announcements",
                "body": {
                    "title": "New Announcement"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get All Announcements",
            "method": "GET",
            "url": "https://api.example.com/v1/announcements",
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve all announcements",
                "description": "Verify that all announcements can be retrieved.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/announcements",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to get announcements with invalid accept header",
                "description": "Verify that the API requires a valid Accept header.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "text/html"
                    }
                ],
                "url": "https://api.example.com/v1/announcements",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Delete Announcement",
            "method": "DELETE",
            "url": "https://api.example.com/v1/announcements/{announcement_id}",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully delete announcement",
                "description": "Verify that an admin can delete an announcement.",
                "method": "DELETE",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/announcements/123",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to delete announcement with invalid ID",
                "description": "Verify that API rejects deletion with an invalid announcement ID format.",
                "method": "DELETE",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/announcements/invalid_id",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get System Status",
            "method": "GET",
            "url": "https://api.example.com/v1/system/status",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer monitoring_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve system status",
                "description": "Verify that the system status can be retrieved with a valid token.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer monitoring_token"
                    }
                ],
                "url": "https://api.example.com/v1/system/status",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to retrieve system status with invalid token",
                "description": "Verify that unauthorized users cannot retrieve system status.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer invalid_token"
                    }
                ],
                "url": "https://api.example.com/v1/system/status",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Run System Maintenance",
            "method": "POST",
            "url": "https://api.example.com/v1/system/maintenance",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer super_admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully initiate system maintenance",
                "description": "Verify that a super admin can initiate system maintenance.",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer super_admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/system/maintenance",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to initiate maintenance without super admin token",
                "description": "Verify that API rejects system maintenance initiation without super admin token.",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/system/maintenance",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Application Logs",
            "method": "GET",
            "url": "https://api.example.com/v1/logs",
            "params": [
                {
                    "key": "level",
                    "value": "error"
                }
            ],
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer developer_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve application logs",
                "description": "Verify that a developer can retrieve application logs.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer developer_token"
                    }
                ],
                "url": "https://api.example.com/v1/logs?level=error",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to retrieve logs without authorization",
                "description": "Verify that unauthorized users cannot retrieve application logs.",
                "method": "GET",
                "url": "https://api.example.com/v1/logs?level=error",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Coupon Details",
            "method": "GET",
            "url": "https://api.example.com/v1/coupons/{coupon_code}",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve coupon details",
                "description": "Verify coupon details are retrieved for a valid coupon code.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/coupons/SUMMER20",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to retrieve details of non-existent coupon",
                "description": "Verify API returns error for non-existent coupon code.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/coupons/INVALID",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Apply Coupon to Cart",
            "method": "POST",
            "url": "https://api.example.com/v1/cart/apply_coupon",
            "body": {
                "coupon_code": "SUMMER20"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully apply coupon to cart",
                "description": "Verify coupon is successfully applied to user's cart.",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/cart/apply_coupon",
                "body": {
                    "coupon_code": "SUMMER20"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to apply invalid coupon to cart",
                "description": "Verify applying an invalid coupon to cart returns an error.",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/cart/apply_coupon",
                "body": {
                    "coupon_code": "INVALID"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get User Notifications",
            "method": "GET",
            "url": "https://api.example.com/v1/users/{user_id}/notifications",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve user notifications",
                "description": "Verify user can retrieve their notifications.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/notifications",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to retrieve notifications for another user",
                "description": "Verify user cannot retrieve notifications for other users.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/456/notifications",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Mark Notification as Read",
            "method": "PUT",
            "url": "https://api.example.com/v1/notifications/{notification_id}/read",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully mark notification as read",
                "description": "Verify user can mark a notification as read.",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/notifications/789/read",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to mark non-existent notification as read",
                "description": "Verify API returns error for non-existent notification.",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/notifications/INVALID/read",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Featured Products",
            "method": "GET",
            "url": "https://api.example.com/v1/products/featured",
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve featured products",
                "description": "Verify featured products can be retrieved.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/featured",
                "expected_status": true
            },
            {
                "test_case_name": "Request Featured Product with invalid accept header",
                "description": "Test",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "text/html"
                    }
                ],
                "url": "https://api.example.com/v1/products/featured",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Share Product on Social Media",
            "method": "POST",
            "url": "https://api.example.com/v1/products/{product_id}/share",
            "body": {
                "platform": "facebook"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully share product on social media",
                "description": "Verify user can successfully share a product on social media.",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/products/123/share",
                "body": {
                    "platform": "facebook"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt share to invalid platform",
                "description": "Verify API rejects share requests to invalid platforms.",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/products/123/share",
                "body": {
                    "platform": "myspace"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Related Products",
            "method": "GET",
            "url": "https://api.example.com/v1/products/{product_id}/related",
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Check for related products",
                "description": "Endpoint to check if the user can get related products",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/123/related",
                "expected_status": true
            },
            {
                "test_case_name": "Check related products for invalid id",
                "description": "Related Products not fetched for wrong ID",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/none/related",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Follow a User",
            "method": "POST",
            "url": "https://api.example.com/v1/users/{user_id}/follow",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Check if the user is being followed",
                "description": "Check for correct details",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/follow",
                "expected_status": true
            },
            {
                "test_case_name": "Try to follow user without auth",
                "description": "New user",
                "method": "POST",
                "url": "https://api.example.com/v1/users/123/follow",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "UnFollow a User",
            "method": "POST",
            "url": "https://api.example.com/v1/users/{user_id}/unfollow",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Unfollow the user",
                "description": "Unfollow the user with correct details",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/unfollow",
                "expected_status": true
            },
            {
                "test_case_name": "UnFollow without auth",
                "description": "Try to UnFollow user without auth",
                "method": "POST",
                "url": "https://api.example.com/v1/users/123/unfollow",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Block a User",
            "method": "POST",
            "url": "https://api.example.com/v1/users/{user_id}/block",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "block a User",
                "description": "User should be blocked with valid user token",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/block",
                "expected_status": true
            },
            {
                "test_case_name": "User Block without auth token",
                "description": "The is block should not happen without correct details",
                "method": "POST",
                "url": "https://api.example.com/v1/users/123/block",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "UnBlock a User",
            "method": "POST",
            "url": "https://api.example.com/v1/users/{user_id}/unblock",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Unblock a user with a valid token",
                "description": "New user",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/unblock",
                "expected_status": true
            },
            {
                "test_case_name": "Unblock with invalid token",
                "description": "New user",
                "method": "POST",
                "url": "https://api.example.com/v1/users/123/unblock",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get User Notifications",
            "method": "GET",
            "url": "https://api.example.com/v1/users/{user_id}/notifications",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve user notifications",
                "description": "Verify user can retrieve their notifications.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/notifications",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to retrieve notifications for another user",
                "description": "Verify user cannot retrieve notifications for other users.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/456/notifications",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Mark Notification as Read",
            "method": "PUT",
            "url": "https://api.example.com/v1/notifications/{notification_id}/read",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully mark notification as read",
                "description": "Verify user can mark a notification as read.",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/notifications/789/read",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to mark non-existent notification as read",
                "description": "Verify API returns error for non-existent notification.",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/notifications/INVALID/read",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Featured Products",
            "method": "GET",
            "url": "https://api.example.com/v1/products/featured",
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve featured products",
                "description": "Verify featured products can be retrieved.",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/featured",
                "expected_status": true
            },
            {
                "test_case_name": "Request Featured Product with invalid accept header",
                "description": "Test",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "text/html"
                    }
                ],
                "url": "https://api.example.com/v1/products/featured",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Share Product on Social Media",
            "method": "POST",
            "url": "https://api.example.com/v1/products/{product_id}/share",
            "body": {
                "platform": "facebook"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully share product on social media",
                "description": "Verify user can successfully share a product on social media.",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/products/123/share",
                "body": {
                    "platform": "facebook"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt share to invalid platform",
                "description": "Verify API rejects share requests to invalid platforms.",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/products/123/share",
                "body": {
                    "platform": "myspace"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Related Products",
            "method": "GET",
            "url": "https://api.example.com/v1/products/{product_id}/related",
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Check for related products",
                "description": "Endpoint to check if the user can get related products",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/123/related",
                "expected_status": true
            },
            {
                "test_case_name": "Check related products for invalid id",
                "description": "Related Products not fetched for wrong ID",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/none/related",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Follow a User",
            "method": "POST",
            "url": "https://api.example.com/v1/users/{user_id}/follow",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Check if the user is being followed",
                "description": "Check for correct details",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/follow",
                "expected_status": true
            },
            {
                "test_case_name": "Try to follow user without auth",
                "description": "New user",
                "method": "POST",
                "url": "https://api.example.com/v1/users/123/follow",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "UnFollow a User",
            "method": "POST",
            "url": "https://api.example.com/v1/users/{user_id}/unfollow",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Unfollow the user",
                "description": "Unfollow the user with correct details",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/unfollow",
                "expected_status": true
            },
            {
                "test_case_name": "UnFollow without auth",
                "description": "Try to UnFollow user without auth",
                "method": "POST",
                "url": "https://api.example.com/v1/users/123/unfollow",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Block a User",
            "method": "POST",
            "url": "https://api.example.com/v1/users/{user_id}/block",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "block a User",
                "description": "User should be blocked with valid user token",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/block",
                "expected_status": true
            },
            {
                "test_case_name": "User Block without auth token",
                "description": "The is block should not happen without correct details",
                "method": "POST",
                "url": "https://api.example.com/v1/users/123/block",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "UnBlock a User",
            "method": "POST",
            "url": "https://api.example.com/v1/users/{user_id}/unblock",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Unblock a user with a valid token",
                "description": "New user",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/unblock",
                "expected_status": true
            },
            {
                "test_case_name": "Unblock with invalid token",
                "description": "New user",
                "method": "POST",
                "url": "https://api.example.com/v1/users/123/unblock",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Report a User",
            "method": "POST",
            "url": "https://api.example.com/v1/users/{user_id}/report",
            "body": {
                "reason": "Violence"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "User Reported with Valid token",
                "description": "The user is reported",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/report",
                "body": {
                    "reason": "Violence"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Report an invalid user",
                "description": "Check if it returns false on non-existent user",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/none/report",
                "body": {
                    "reason": "Violence"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Create a Poll",
            "method": "POST",
            "url": "https://api.example.com/v1/polls",
            "body": {
                "question": "What is your favorite color?",
                "options": [
                    "Red",
                    "Blue",
                    "Green"
                ]
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create a poll with valid options",
                "description": "Verify that a poll can be created with valid question and options",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/polls",
                "body": {
                    "question": "What is your favorite color?",
                    "options": [
                        "Red",
                        "Blue",
                        "Green"
                    ]
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to create a poll with empty options",
                "description": "Verify that the API rejects creating a poll with empty options",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/polls",
                "body": {
                    "question": "What is your favorite color?",
                    "options": []
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Vote in a Poll",
            "method": "POST",
            "url": "https://api.example.com/v1/polls/{poll_id}/votes",
            "body": {
                "option": "Blue"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully cast a vote in a poll",
                "description": "Verify that a user can vote in a poll with a valid option",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/polls/123/votes",
                "body": {
                    "option": "Blue"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to vote with an invalid option",
                "description": "Verify that the API rejects voting with an invalid option",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/polls/123/votes",
                "body": {
                    "option": "Invalid"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Poll Results",
            "method": "GET",
            "url": "https://api.example.com/v1/polls/{poll_id}/results",
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve poll results",
                "description": "Verify that poll results can be retrieved",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/polls/123/results",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to retrieve results for a non-existent poll",
                "description": "Verify that the API returns an error for a non-existent poll",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/polls/99999/results",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Create a Forum Topic",
            "method": "POST",
            "url": "https://api.example.com/v1/forums/topics",
            "body": {
                "title": "New Topic",
                "content": "This is a new topic."
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create a forum topic",
                "description": "Verify that a user can create a new forum topic",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/forums/topics",
                "body": {
                    "title": "New Topic",
                    "content": "This is a new topic."
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to create a forum topic without title",
                "description": "Verify that the API rejects creating a topic without a title",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/forums/topics",
                "body": {
                    "content": "This is a new topic."
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Reply to a Forum Topic",
            "method": "POST",
            "url": "https://api.example.com/v1/forums/topics/{topic_id}/replies",
            "body": {
                "content": "This is a reply to the topic."
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully reply to a forum topic",
                "description": "Verify that a user can reply to a forum topic",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/forums/topics/123/replies",
                "body": {
                    "content": "This is a reply to the topic."
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to reply to a non-existent topic",
                "description": "Verify that the API returns an error for a non-existent topic",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/forums/topics/99999/replies",
                "body": {
                    "content": "This is a reply to the topic."
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Forum Topics",
            "method": "GET",
            "url": "https://api.example.com/v1/forums/topics",
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve forum topics",
                "description": "Verify that forum topics can be retrieved",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/forums/topics",
                "expected_status": true
            },
            {
                "test_case_name": "Retrieve topics with pagination",
                "description": "Verify that topics can be retrieved with pagination",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/forums/topics?limit=10&page=1",
                "expected_status": true
            }
        ]
    },
    {
        "input": {
            "name": "Create a Support Ticket",
            "method": "POST",
            "url": "https://api.example.com/v1/support/tickets",
            "body": {
                "subject": "Issue with Product",
                "description": "Product not working as expected."
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create a support ticket",
                "description": "Verify that a user can create a support ticket",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/support/tickets",
                "body": {
                    "subject": "Issue with Product",
                    "description": "Product not working as expected."
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to create a ticket without subject",
                "description": "Verify that the API rejects creating a ticket without a subject",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/support/tickets",
                "body": {
                    "description": "Product not working as expected."
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Support Ticket Status",
            "method": "GET",
            "url": "https://api.example.com/v1/support/tickets/{ticket_id}/status",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve ticket status",
                "description": "Verify that a user can retrieve the status of their support ticket",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/support/tickets/123/status",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to retrieve status of non-existent ticket",
                "description": "Verify that the API returns an error for a non-existent ticket",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/support/tickets/99999/status",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Update Support Ticket",
            "method": "PUT",
            "url": "https://api.example.com/v1/support/tickets/{ticket_id}",
            "body": {
                "description": "Updated description of the issue."
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully update a support ticket",
                "description": "Verify that a user can update their support ticket",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/support/tickets/123",
                "body": {
                    "description": "Updated description of the issue."
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to update a non-existent ticket",
                "description": "Verify that the API returns an error for a non-existent ticket",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/support/tickets/99999",
                "body": {
                    "description": "Updated description of the issue."
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Close Support Ticket",
            "method": "PUT",
            "url": "https://api.example.com/v1/support/tickets/{ticket_id}/close",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully close a support ticket",
                "description": "Verify that a user can close their support ticket",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/support/tickets/123/close",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to close a non-existent ticket",
                "description": "Verify that the API returns an error for a non-existent ticket",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/support/tickets/99999/close",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Create a Knowledge Base Article",
            "method": "POST",
            "url": "https://api.example.com/v1/knowledgebase/articles",
            "body": {
                "title": "How to Use Our Product",
                "content": "Step-by-step guide to using our product."
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create a knowledge base article",
                "description": "Verify that an admin can create a new knowledge base article",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/knowledgebase/articles",
                "body": {
                    "title": "How to Use Our Product",
                    "content": "Step-by-step guide to using our product."
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to create an article without title",
                "description": "Verify that the API rejects creating an article without a title",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/knowledgebase/articles",
                "body": {
                    "content": "Step-by-step guide to using our product."
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Knowledge Base Articles",
            "method": "GET",
            "url": "https://api.example.com/v1/knowledgebase/articles",
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve knowledge base articles",
                "description": "Verify that knowledge base articles can be retrieved",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/knowledgebase/articles",
                "expected_status": true
            },
            {
                "test_case_name": "Search knowledge base articles",
                "description": "Verify ability to search articles",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/knowledgebase/articles?search=product",
                "expected_status": true
            }
        ]
    },
    {
        "input": {
            "name": "Update Knowledge Base Article",
            "method": "PUT",
            "url": "https://api.example.com/v1/knowledgebase/articles/{article_id}",
            "body": {
                "content": "Updated step-by-step guide to using our product."
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully update a knowledge base article",
                "description": "Verify that an admin can update a knowledge base article",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/knowledgebase/articles/123",
                "body": {
                    "content": "Updated step-by-step guide to using our product."
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to update a non-existent article",
                "description": "Verify that the API returns an error for a non-existent article",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/knowledgebase/articles/99999",
                "body": {
                    "content": "Updated step-by-step guide to using our product."
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Delete Knowledge Base Article",
            "method": "DELETE",
            "url": "https://api.example.com/v1/knowledgebase/articles/{article_id}",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully delete a knowledge base article",
                "description": "Verify that an admin can delete a knowledge base article",
                "method": "DELETE",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/knowledgebase/articles/123",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to delete a non-existent article",
                "description": "Verify that the API returns an error for a non-existent article",
                "method": "DELETE",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/knowledgebase/articles/99999",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Send Password Reset Email",
            "method": "POST",
            "url": "https://api.example.com/v1/auth/forgot-password",
            "body": {
                "email": "user@example.com"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Password reset email sent",
                "description": "Valid user is able to get a password reset email",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/auth/forgot-password",
                "body": {
                    "email": "user@example.com"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Invalid user - password reset email can't be sent",
                "description": "Attempt to get a password reset token for an invalid user",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/auth/forgot-password",
                "body": {
                    "email": "none@example.com"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Check Product Availability",
            "method": "GET",
            "url": "https://api.example.com/v1/products/{product_id}/availability",
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully check product availability",
                "description": "Verify that product availability can be checked for a valid product ID",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/123/availability",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to check availability of non-existent product",
                "description": "Verify that the API returns an error for a non-existent product ID",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/99999/availability",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Subscribe to Stock Alerts",
            "method": "POST",
            "url": "https://api.example.com/v1/products/{product_id}/subscribe",
            "body": {
                "email": "user@example.com"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully subscribe to stock alerts",
                "description": "Verify that a user can subscribe to receive alerts when a product is back in stock",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/123/subscribe",
                "body": {
                    "email": "user@example.com"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to subscribe with invalid email format",
                "description": "Verify that the API validates the email format correctly",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/123/subscribe",
                "body": {
                    "email": "invalid-email"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Top Selling Products",
            "method": "GET",
            "url": "https://api.example.com/v1/products/top-selling",
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve top selling products",
                "description": "Verify that the list of top-selling products can be retrieved",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/top-selling",
                "expected_status": true
            },
            {
                "test_case_name": "Check that top selling are in JSON format",
                "description": "Checking for text header not in json format",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "text/html"
                    }
                ],
                "url": "https://api.example.com/v1/products/top-selling",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get New Arrival Products",
            "method": "GET",
            "url": "https://api.example.com/v1/products/new-arrival",
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "New arrival products",
                "description": "Check if the new products are viewed",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/products/new-arrival",
                "expected_status": true
            },
            {
                "test_case_name": "Invalid return - New arrival products",
                "description": "Check if returning a non-valid body such as txt",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "text/html"
                    }
                ],
                "url": "https://api.example.com/v1/products/new-arrival",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Give User Badges",
            "method": "POST",
            "url": "https://api.example.com/v1/users/{user_id}/badge",
            "body": {
                "badge_name": "new_user"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Give badge to User",
                "description": "New user should be valid to assign badge to",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/badge",
                "body": {
                    "badge_name": "new_user"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Wrong User id to give User Badges",
                "description": "New user",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/non-valid/badge",
                "body": {
                    "badge_name": "new_user"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Give User Badges",
            "method": "DELETE",
            "url": "https://api.example.com/v1/users/{user_id}/badge",
            "body": {
                "badge_name": "new_user"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "User badge remove",
                "description": "New user",
                "method": "DELETE",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/badge",
                "body": {
                    "badge_name": "new_user"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Can't remove the badge without valid credientals",
                "description": "New user",
                "method": "DELETE",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/badge",
                "body": {
                    "badge_name": "new_user"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Create User Group",
            "method": "POST",
            "url": "https://api.example.com/v1/groups",
            "body": {
                "name": "Admins",
                "description": "Administrators of the system"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "New user group",
                "description": "check endpoint for a user group with valid data",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/groups",
                "body": {
                    "name": "Admins",
                    "description": "Administrators of the system"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Create user with with empty name",
                "description": "Test for wrong name value",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/groups",
                "body": {
                    "name": "",
                    "description": "Administrators of the system"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Add User to Group",
            "method": "POST",
            "url": "https://api.example.com/v1/groups/{group_id}/users/{user_id}",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Check if user is added to group with validadata",
                "description": "New user",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/groups/123/users/456",
                "expected_status": true
            },
            {
                "test_case_name": "Add User to group without credentials",
                "description": "Admin permission requires to add",
                "method": "POST",
                "url": "https://api.example.com/v1/groups/123/users/456",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Remove User from Group",
            "method": "DELETE",
            "url": "https://api.example.com/v1/groups/{group_id}/users/{user_id}",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Check if user is deleted in the group",
                "description": "Check id if the user is deleted",
                "method": "DELETE",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/groups/123/users/456",
                "expected_status": true
            },
            {
                "test_case_name": "Remove user with invalid credentials",
                "description": "Can't remove user without correct credentials",
                "method": "DELETE",
                "url": "https://api.example.com/v1/groups/123/users/456",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Send Push Notification to Group",
            "method": "POST",
            "url": "https://api.example.com/v1/notifications/groups/{group_id}",
            "body": {
                "message": "Important announcement for group members."
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Correct details to send push notif",
                "description": "Push notification is seny",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/notifications/groups/123",
                "body": {
                    "message": "Important announcement for group members."
                },
                "expected_status": true
            },
            {
                "test_case_name": "Incorrect details to send push notif",
                "description": "Send notifications with inccorrect details - should return false",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer invalid_token"
                    }
                ],
                "url": "https://api.example.com/v1/notifications/groups/123",
                "body": {
                    "message": "Important announcement for group members."
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Available Languages",
            "method": "GET",
            "url": "https://api.example.com/v1/localization/languages",
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Get Available Languages with valid content",
                "description": "Verify that content can be get",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/localization/languages",
                "expected_status": true
            },
            {
                "test_case_name": "Invalid format",
                "description": "Verify content can be get",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "text/html"
                    }
                ],
                "url": "https://api.example.com/v1/localization/languages",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Set User Language Preference",
            "method": "PUT",
            "url": "https://api.example.com/v1/users/{user_id}/language",
            "body": {
                "language": "es"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Verify user is able to set correct language",
                "description": "Valid token",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/language",
                "body": {
                    "language": "es"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Incorect details",
                "description": "The values should be correct",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer invalid_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/language",
                "body": {
                    "language": "es"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Record Product View",
            "method": "POST",
            "url": "https://api.example.com/v1/products/{product_id}/views",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Record product view for existing product",
                "description": "Verify that a product view can be recorded for a existing product",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/products/123/views",
                "expected_status": true
            },
            {
                "test_case_name": "Product does not exist and the view can't be stored",
                "description": "Test scenario fails if product not found",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/products/NON-EXISTENT/views",
                "expected_status": false
            },
            {
                "test_case_name": "View can't be created if invalid token",
                "description": "Test if the user has correct details",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer invalid_token"
                    }
                ],
                "url": "https://api.example.com/v1/products/123/views",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Order List",
            "method": "GET",
            "url": "https://api.example.com/v1/user/{user_id}/orders",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Get Order list with valid credientals",
                "description": "New user",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/user/123/orders",
                "expected_status": true
            },
            {
                "test_case_name": "Try to get orderList without auth",
                "description": "Try to access the order list without authorization",
                "method": "GET",
                "url": "https://api.example.com/v1/user/123/orders",
                "expected_status": false
            },
            {
                "test_case_name": "The User does not exist",
                "description": "User not exits - so it should retunr false",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/user/non-valid/orders",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Create Return Request",
            "method": "POST",
            "url": "https://api.example.com/v1/orders/{order_id}/returns",
            "body": {
                "reason": "Damaged product"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Can create a return with correct info",
                "description": "Correct info",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/orders/ORD-123/returns",
                "body": {
                    "reason": "Damaged product"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Can't create a return without auth",
                "description": "Auth needed",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/orders/ORD-123/returns",
                "body": {
                    "reason": "Damaged product"
                },
                "expected_status": false
            },
            {
                "test_case_name": "Can't create a return without the return reason",
                "description": "The reason can't be empty",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/orders/ORD-123/returns",
                "body": {},
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Check Return Request",
            "method": "GET",
            "url": "https://api.example.com/v1/orders/{order_id}/returns",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Check return request with valid data",
                "description": "New user",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/orders/ORD-123/returns",
                "expected_status": true
            },
            {
                "test_case_name": "No auth",
                "description": "New user",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/orders/ORD-123/returns",
                "expected_status": false
            },
            {
                "test_case_name": "Return request not created",
                "description": "New user",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/orders/wrong/returns",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Payment Methods",
            "method": "GET",
            "url": "https://api.example.com/v1/users/{user_id}/payment_methods",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                },
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve payment methods for user",
                "description": "Verify that registered payment methods are returned for a user",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/payment_methods",
                "expected_status": true
            },
            {
                "test_case_name": "Check if a non-valid request gets the payment details",
                "description": "Verify that unauthorized calls return false",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/payment_methods",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Add Payment Method",
            "method": "POST",
            "url": "https://api.example.com/v1/users/{user_id}/payment_methods",
            "body": {
                "type": "credit_card",
                "card_number": "4111111111111111",
                "expiration_date": "12/24",
                "cvv": "123"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Add payment method with valid details",
                "description": "New user",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/payment_methods",
                "body": {
                    "type": "credit_card",
                    "card_number": "4111111111111111",
                    "expiration_date": "12/24",
                    "cvv": "123"
                },
                "expected_status": true
            },
            {
                "test_case_name": "With no auth",
                "description": "Try add payment without auth",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/payment_methods",
                "body": {
                    "type": "credit_card",
                    "card_number": "4111111111111111",
                    "expiration_date": "12/24",
                    "cvv": "123"
                },
                "expected_status": false
            },
            {
                "test_case_name": "Add payment method with wrong details",
                "description": "New user",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/payment_methods",
                "body": {
                    "type": "credit_card",
                    "card_number": "4111",
                    "expiration_date": "12/24",
                    "cvv": "123"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Delete Payment Method",
            "method": "DELETE",
            "url": "https://api.example.com/v1/users/{user_id}/payment_methods/{payment_method_id}",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Valid details to delete payment method",
                "description": "check payment method with valid data",
                "method": "DELETE",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/payment_methods/456",
                "expected_status": true
            },
            {
                "test_case_name": "no auth",
                "description": "With no auth",
                "method": "DELETE",
                "url": "https://api.example.com/v1/users/123/payment_methods/456",
                "expected_status": false
            },
            {
                "test_case_name": "No existing payment Method",
                "description": "check payment method for invalid method id",
                "method": "DELETE",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/payment_methods/none",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Apply for seller account",
            "method": "POST",
            "url": "https://api.example.com/v1/users/{user_id}/seller/application",
            "body": {
                "shop_name": "testShop",
                "business_details": "random"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Seller is able to apply with correct details",
                "description": "New user",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/seller/application",
                "body": {
                    "shop_name": "testShop",
                    "business_details": "random"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Seller can't aply with invalid id",
                "description": "Invalid User",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/none/seller/application",
                "body": {
                    "shop_name": "testShop",
                    "business_details": "random"
                },
                "expected_status": false
            },
            {
                "test_case_name": "Seller can't apply without shop_name or business_details",
                "description": "The application info can't be ampty",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/seller/application",
                "body": {},
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Seller Add a Product",
            "method": "POST",
            "url": "https://api.example.com/v1/seller/{seller_id}/products",
            "body": {
                "product_name": "Watch",
                "price": 30
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer seller_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "valid data to add product",
                "description": "New user",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer seller_token"
                    }
                ],
                "url": "https://api.example.com/v1/seller/123/products",
                "body": {
                    "product_name": "Watch",
                    "price": 30
                },
                "expected_status": true
            },
            {
                "test_case_name": "Try to add the product without correct Auth",
                "description": "With out details, this will return false",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/seller/123/products",
                "body": {
                    "product_name": "Watch",
                    "price": 30
                },
                "expected_status": false
            },
            {
                "test_case_name": "Seller has no product name or product price",
                "description": "Test case to return with empty data",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer seller_token"
                    }
                ],
                "url": "https://api.example.com/v1/seller/123/products",
                "body": {},
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Check if the the shop name exits",
            "method": "GET",
            "url": "https://api.example.com/v1/shops/{shop_name}/availability",
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Check shop is available or not",
                "description": "Shop name exits test shop is available",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/shops/testShop/availability",
                "expected_status": true
            },
            {
                "test_case_name": "invalid_shop_name",
                "description": "Shop name is invalid and not there in the db",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/shops/thisShop-doesNotExits/availability",
                "expected_status": false
            },
            {
                "test_case_name": "Check without JSON Return Type",
                "description": "Shop name is invalid and not there in the db",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "text/html"
                    }
                ],
                "url": "https://api.example.com/v1/shops/testShop/availability",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Create a Referral Program",
            "method": "POST",
            "url": "https://api.example.com/v1/referral/programs",
            "body": {
                "program_name": "Friend Referral",
                "reward_type": "discount"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create a referral program",
                "description": "Verify that an admin can create a new referral program",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/referral/programs",
                "body": {
                    "program_name": "Friend Referral",
                    "reward_type": "discount"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to create a program without admin rights",
                "description": "Verify that creating a referral program requires admin rights",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/referral/programs",
                "body": {
                    "program_name": "Friend Referral",
                    "reward_type": "discount"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Referral Program Details",
            "method": "GET",
            "url": "https://api.example.com/v1/referral/programs/{program_id}",
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve referral program details",
                "description": "Verify that referral program details can be retrieved",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/referral/programs/123",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to retrieve details of non-existent program",
                "description": "Verify that the API returns an error for a non-existent program",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/referral/programs/99999",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Generate Referral Link",
            "method": "POST",
            "url": "https://api.example.com/v1/referral/links",
            "body": {
                "program_id": 123,
                "referrer_id": 456
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully generate a referral link",
                "description": "Verify that a user can generate a referral link",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/referral/links",
                "body": {
                    "program_id": 123,
                    "referrer_id": 456
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to generate link without required fields",
                "description": "Verify that the API rejects generating a link without required fields",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/referral/links",
                "body": {
                    "program_id": 123
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Track Referral",
            "method": "POST",
            "url": "https://api.example.com/v1/referral/tracks",
            "body": {
                "referral_link": "https://example.com/referral/123"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully track a referral",
                "description": "Verify that a referral can be tracked",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/referral/tracks",
                "body": {
                    "referral_link": "https://example.com/referral/123"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to track an invalid referral link",
                "description": "Verify that the API rejects tracking an invalid referral link",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/referral/tracks",
                "body": {
                    "referral_link": "invalid_link"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Referral Rewards",
            "method": "GET",
            "url": "https://api.example.com/v1/referral/rewards",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve referral rewards",
                "description": "Verify that a user can retrieve their referral rewards",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/referral/rewards",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to retrieve rewards without authorization",
                "description": "Verify that the API requires authorization to retrieve rewards",
                "method": "GET",
                "url": "https://api.example.com/v1/referral/rewards",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Create a Gift Card",
            "method": "POST",
            "url": "https://api.example.com/v1/giftcards",
            "body": {
                "amount": 50.0,
                "recipient_email": "recipient@example.com"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create a gift card",
                "description": "Verify that a user can create a gift card",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/giftcards",
                "body": {
                    "amount": 50.0,
                    "recipient_email": "recipient@example.com"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to create a gift card without recipient email",
                "description": "Verify that the API requires a recipient email",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/giftcards",
                "body": {
                    "amount": 50.0
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Redeem Gift Card",
            "method": "POST",
            "url": "https://api.example.com/v1/giftcards/{gift_card_id}/redeem",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully redeem a gift card",
                "description": "Verify that a user can redeem a gift card",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/giftcards/123/redeem",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to redeem a non-existent gift card",
                "description": "Verify that the API returns an error for a non-existent gift card",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/giftcards/99999/redeem",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Gift Card Balance",
            "method": "GET",
            "url": "https://api.example.com/v1/giftcards/{gift_card_id}/balance",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve gift card balance",
                "description": "Verify that a user can retrieve the balance of a gift card",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/giftcards/123/balance",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to retrieve balance of non-existent gift card",
                "description": "Verify that the API returns an error for a non-existent gift card",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/giftcards/99999/balance",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Create a Loyalty Program",
            "method": "POST",
            "url": "https://api.example.com/v1/loyalty/programs",
            "body": {
                "program_name": "Points Program",
                "reward_type": "points"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create a loyalty program",
                "description": "Verify that an admin can create a new loyalty program",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/loyalty/programs",
                "body": {
                    "program_name": "Points Program",
                    "reward_type": "points"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to create a program without admin rights",
                "description": "Verify that creating a loyalty program requires admin rights",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/loyalty/programs",
                "body": {
                    "program_name": "Points Program",
                    "reward_type": "points"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Loyalty Program Details",
            "method": "GET",
            "url": "https://api.example.com/v1/loyalty/programs/{program_id}",
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve loyalty program details",
                "description": "Verify that loyalty program details can be retrieved",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/loyalty/programs/123",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to retrieve details of non-existent program",
                "description": "Verify that the API returns an error for a non-existent program",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/loyalty/programs/99999",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Earn Loyalty Points",
            "method": "POST",
            "url": "https://api.example.com/v1/loyalty/points",
            "body": {
                "program_id": 123,
                "points_earned": 10
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully earn loyalty points",
                "description": "Verify that a user can earn loyalty points",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/loyalty/points",
                "body": {
                    "program_id": 123,
                    "points_earned": 10
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to earn points without required fields",
                "description": "Verify that the API rejects earning points without required fields",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/loyalty/points",
                "body": {
                    "program_id": 123
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Redeem Loyalty Points",
            "method": "POST",
            "url": "https://api.example.com/v1/loyalty/points/redeem",
            "body": {
                "program_id": 123,
                "points_to_redeem": 10
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully redeem loyalty points",
                "description": "Verify that a user can redeem loyalty points",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/loyalty/points/redeem",
                "body": {
                    "program_id": 123,
                    "points_to_redeem": 10
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to redeem more points than available",
                "description": "Verify that the API prevents redeeming more points than available",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/loyalty/points/redeem",
                "body": {
                    "program_id": 123,
                    "points_to_redeem": 0
                },
                "expected_status": true
            }
        ]
    },
    {
        "input": {
            "name": "Create a Subscription Plan",
            "method": "POST",
            "url": "https://api.example.com/v1/subscriptions/plans",
            "body": {
                "plan_name": "Monthly Plan",
                "price": 9.99
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create a subscription plan",
                "description": "Verify that an admin can create a new subscription plan",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/subscriptions/plans",
                "body": {
                    "plan_name": "Monthly Plan",
                    "price": 9.99
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to create a plan without admin rights",
                "description": "Verify that creating a subscription plan requires admin rights",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/subscriptions/plans",
                "body": {
                    "plan_name": "Monthly Plan",
                    "price": 9.99
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Subscription Plan Details",
            "method": "GET",
            "url": "https://api.example.com/v1/subscriptions/plans/{plan_id}",
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve subscription plan details",
                "description": "Verify that subscription plan details can be retrieved",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/subscriptions/plans/123",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to retrieve details of non-existent plan",
                "description": "Verify that the API returns an error for a non-existent plan",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/subscriptions/plans/99999",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Subscribe to a Plan",
            "method": "POST",
            "url": "https://api.example.com/v1/subscriptions/subscribe",
            "body": {
                "plan_id": 123
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully subscribe to a plan",
                "description": "Verify that a user can subscribe to a plan",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/subscriptions/subscribe",
                "body": {
                    "plan_id": 123
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to subscribe without required fields",
                "description": "Verify that the API rejects subscribing without required fields",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/subscriptions/subscribe",
                "body": {},
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Unsubscribe from a Plan",
            "method": "POST",
            "url": "https://api.example.com/v1/subscriptions/unsubscribe",
            "body": {
                "plan_id": 123
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully unsubscribe from a plan",
                "description": "Verify that a user can unsubscribe from a plan",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/subscriptions/unsubscribe",
                "body": {
                    "plan_id": 123
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to unsubscribe from a non-existent plan",
                "description": "Verify that the API returns an error for a non-existent plan",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/subscriptions/unsubscribe",
                "body": {
                    "plan_id": 99999
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Subscription Status",
            "method": "GET",
            "url": "https://api.example.com/v1/subscriptions/{subscription_id}/status",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve subscription status",
                "description": "Verify that a user can retrieve the status of their subscription",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/subscriptions/123/status",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to retrieve status of non-existent subscription",
                "description": "Verify that the API returns an error for a non-existent subscription",
                "method": "GET",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/subscriptions/99999/status",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Create a Webhook",
            "method": "POST",
            "url": "https://api.example.com/v1/webhooks",
            "body": {
                "event": "order_placed",
                "callback_url": "https://example.com/callback"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create a webhook",
                "description": "Verify that an admin can create a new webhook",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/webhooks",
                "body": {
                    "event": "order_placed",
                    "callback_url": "https://example.com/callback"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to create a webhook without admin rights",
                "description": "Verify that creating a webhook requires admin rights",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/webhooks",
                "body": {
                    "event": "order_placed",
                    "callback_url": "https://example.com/callback"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Webhook Details",
            "method": "GET",
            "url": "https://api.example.com/v1/webhooks/{webhook_id}",
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve webhook details",
                "description": "Verify that webhook details can be retrieved",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/webhooks/123",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to retrieve details of non-existent webhook",
                "description": "Verify that the API returns an error for a non-existent webhook",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/webhooks/99999",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Update Webhook",
            "method": "PUT",
            "url": "https://api.example.com/v1/webhooks/{webhook_id}",
            "body": {
                "callback_url": "https://example.com/new_callback"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully update a webhook",
                "description": "Verify that an admin can update a webhook",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/webhooks/123",
                "body": {
                    "callback_url": "https://example.com/new_callback"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to update a non-existent webhook",
                "description": "Verify that the API returns an error for a non-existent webhook",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/webhooks/99999",
                "body": {
                    "callback_url": "https://example.com/new_callback"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Delete Webhook",
            "method": "DELETE",
            "url": "https://api.example.com/v1/webhooks/{webhook_id}",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully delete a webhook",
                "description": "Verify that an admin can delete a webhook",
                "method": "DELETE",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/webhooks/123",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to delete a non-existent webhook",
                "description": "Verify that the API returns an error for a non-existent webhook",
                "method": "DELETE",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/webhooks/99999",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Create a Task",
            "method": "POST",
            "url": "https://api.example.com/v1/tasks",
            "body": {
                "title": "New Task",
                "description": "Task description"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create a task",
                "description": "Verify that a user can create a new task",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/tasks",
                "body": {
                    "title": "New Task",
                    "description": "Task description"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to create a task without required fields",
                "description": "Verify that the API rejects creating a task without required fields",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/tasks",
                "body": {
                    "description": "Task description"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Task Details",
            "method": "GET",
            "url": "https://api.example.com/v1/tasks/{task_id}",
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve task details",
                "description": "Verify that task details can be retrieved",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/tasks/123",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to retrieve details of non-existent task",
                "description": "Verify that the API returns an error for a non-existent task",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/tasks/99999",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Update Task",
            "method": "PUT",
            "url": "https://api.example.com/v1/tasks/{task_id}",
            "body": {
                "status": "completed"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully update a task",
                "description": "Verify that a user can update a task",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/tasks/123",
                "body": {
                    "status": "completed"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to update a non-existent task",
                "description": "Verify that the API returns an error for a non-existent task",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/tasks/99999",
                "body": {
                    "status": "completed"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Create a Calendar Event",
            "method": "POST",
            "url": "https://api.example.com/v1/events",
            "body": {
                "title": "Meeting",
                "start_time": "2024-01-01T10:00:00",
                "end_time": "2024-01-01T11:00:00"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create a calendar event",
                "description": "Verify that a user can create a new calendar event",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/events",
                "body": {
                    "title": "Meeting",
                    "start_time": "2024-01-01T10:00:00",
                    "end_time": "2024-01-01T11:00:00"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to create an event without required fields",
                "description": "Verify that the API rejects creating an event without required fields",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/events",
                "body": {
                    "title": "Meeting"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Calendar Events",
            "method": "GET",
            "url": "https://api.example.com/v1/events",
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve calendar events",
                "description": "Verify that calendar events can be retrieved",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/events",
                "expected_status": true
            },
            {
                "test_case_name": "Retrieve events with pagination",
                "description": "Verify that events can be retrieved with pagination",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/events?limit=10&page=1",
                "expected_status": true
            }
        ]
    },
    {
        "input": {
            "name": "Update Calendar Event",
            "method": "PUT",
            "url": "https://api.example.com/v1/events/{event_id}",
            "body": {
                "title": "Updated Meeting"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully update a calendar event",
                "description": "Verify that a user can update a calendar event",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/events/123",
                "body": {
                    "title": "Updated Meeting"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to update a non-existent event",
                "description": "Verify that the API returns an error for a non-existent event",
                "method": "PUT",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/events/99999",
                "body": {
                    "title": "Updated Meeting"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Delete Calendar Event",
            "method": "DELETE",
            "url": "https://api.example.com/v1/events/{event_id}",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully delete a calendar event",
                "description": "Verify that a user can delete a calendar event",
                "method": "DELETE",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/events/123",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to delete a non-existent event",
                "description": "Verify that the API returns an error for a non-existent event",
                "method": "DELETE",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/events/99999",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Create a Task List",
            "method": "POST",
            "url": "https://api.example.com/v1/tasklists",
            "body": {
                "title": "Daily Tasks"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create a task list",
                "description": "Verify that a user can create a new task list",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/tasklists",
                "body": {
                    "title": "Daily Tasks"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to create a task list without title",
                "description": "Verify that the API rejects creating a task list without a title",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/tasklists",
                "body": {},
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Task List Details",
            "method": "GET",
            "url": "https://api.example.com/v1/tasklists/{tasklist_id}",
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve task list details",
                "description": "Verify that task list details can be retrieved",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/tasklists/123",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to retrieve details of non-existent task list",
                "description": "Verify that the API returns an error for a non-existent task list",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/tasklists/99999",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Add Task to Task List",
            "method": "POST",
            "url": "https://api.example.com/v1/tasklists/{tasklist_id}/tasks",
            "body": {
                "title": "New Task"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully add a task to a task list",
                "description": "Verify that a user can add a task to a task list",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/tasklists/123/tasks",
                "body": {
                    "title": "New Task"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to add a task without title",
                "description": "Verify that the API rejects adding a task without a title",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/tasklists/123/tasks",
                "body": {},
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Remove Task from Task List",
            "method": "DELETE",
            "url": "https://api.example.com/v1/tasklists/{tasklist_id}/tasks/{task_id}",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully remove a task from a task list",
                "description": "Verify that a user can remove a task from a task list",
                "method": "DELETE",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/tasklists/123/tasks/456",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to remove a non-existent task",
                "description": "Verify that the API returns an error for a non-existent task",
                "method": "DELETE",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/tasklists/123/tasks/99999",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Create a Chat Room",
            "method": "POST",
            "url": "https://api.example.com/v1/chat/rooms",
            "body": {
                "name": "General Chat"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create a chat room",
                "description": "Verify that an admin can create a new chat room",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/chat/rooms",
                "body": {
                    "name": "General Chat"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to create a chat room without admin rights",
                "description": "Verify that creating a chat room requires admin rights",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/chat/rooms",
                "body": {
                    "name": "General Chat"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Send Chat Message",
            "method": "POST",
            "url": "https://api.example.com/v1/chat/rooms/{room_id}/messages",
            "body": {
                "message": "Hello, everyone!"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully send a chat message",
                "description": "Verify that a user can send a chat message",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/chat/rooms/123/messages",
                "body": {
                    "message": "Hello, everyone!"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to send a message without content",
                "description": "Verify that the API rejects sending a message without content",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/chat/rooms/123/messages",
                "body": {},
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Chat Messages",
            "method": "GET",
            "url": "https://api.example.com/v1/chat/rooms/{room_id}/messages",
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve chat messages",
                "description": "Verify that chat messages can be retrieved",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/chat/rooms/123/messages",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to retrieve messages from non-existent room",
                "description": "Verify that the API returns an error for a non-existent room",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/chat/rooms/99999/messages",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Create a Digital Badge",
            "method": "POST",
            "url": "https://api.example.com/v1/badges",
            "body": {
                "name": "Achievement Badge",
                "description": "Awarded for completing a course"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create a digital badge",
                "description": "Verify that an admin can create a new digital badge",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/badges",
                "body": {
                    "name": "Achievement Badge",
                    "description": "Awarded for completing a course"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to create a badge without admin rights",
                "description": "Verify that creating a badge requires admin rights",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/badges",
                "body": {
                    "name": "Achievement Badge",
                    "description": "Awarded for completing a course"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Digital Badge Details",
            "method": "GET",
            "url": "https://api.example.com/v1/badges/{badge_id}",
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve digital badge details",
                "description": "Verify that digital badge details can be retrieved",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/badges/123",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to retrieve details of non-existent badge",
                "description": "Verify that the API returns an error for a non-existent badge",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/badges/99999",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Award Digital Badge to User",
            "method": "POST",
            "url": "https://api.example.com/v1/users/{user_id}/badges",
            "body": {
                "badge_id": 123
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully award a digital badge to a user",
                "description": "Verify that an admin can award a digital badge to a user",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/badges",
                "body": {
                    "badge_id": 123
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to award a badge without admin rights",
                "description": "Verify that awarding a badge requires admin rights",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/badges",
                "body": {
                    "badge_id": 123
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get User Badges",
            "method": "GET",
            "url": "https://api.example.com/v1/users/{user_id}/badges",
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve user badges",
                "description": "Verify that user badges can be retrieved",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/badges",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to retrieve badges for non-existent user",
                "description": "Verify that the API returns an error for a non-existent user",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/users/99999/badges",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Create a Learning Path",
            "method": "POST",
            "url": "https://api.example.com/v1/learningpaths",
            "body": {
                "title": "Introduction to Programming",
                "description": "A beginner's guide to programming"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer admin_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create a learning path",
                "description": "Verify that an admin can create a new learning path",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer admin_token"
                    }
                ],
                "url": "https://api.example.com/v1/learningpaths",
                "body": {
                    "title": "Introduction to Programming",
                    "description": "A beginner's guide to programming"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to create a learning path without admin rights",
                "description": "Verify that creating a learning path requires admin rights",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/learningpaths",
                "body": {
                    "title": "Introduction to Programming",
                    "description": "A beginner's guide to programming"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Learning Path Details",
            "method": "GET",
            "url": "https://api.example.com/v1/learningpaths/{learning_path_id}",
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve learning path details",
                "description": "Verify that learning path details can be retrieved",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/learningpaths/123",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to retrieve details of non-existent learning path",
                "description": "Verify that the API returns an error for a non-existent learning path",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/learningpaths/99999",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Enroll in a Learning Path",
            "method": "POST",
            "url": "https://api.example.com/v1/users/{user_id}/learningpaths/{learning_path_id}/enroll",
            "headers": [
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully enroll in a learning path",
                "description": "Verify that a user can enroll in a learning path",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/learningpaths/456/enroll",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to enroll in a non-existent learning path",
                "description": "Verify that the API returns an error for a non-existent learning path",
                "method": "POST",
                "headers": [
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/learningpaths/99999/enroll",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get User Learning Path Progress",
            "method": "GET",
            "url": "https://api.example.com/v1/users/{user_id}/learningpaths/{learning_path_id}/progress",
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve user learning path progress",
                "description": "Verify that user learning path progress can be retrieved",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/learningpaths/456/progress",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to retrieve progress for non-existent learning path",
                "description": "Verify that the API returns an error for a non-existent learning path",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/users/123/learningpaths/99999/progress",
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Create a Community Forum Post",
            "method": "POST",
            "url": "https://api.example.com/v1/community/posts",
            "body": {
                "title": "New Discussion",
                "content": "Hello, community!"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create a community forum post",
                "description": "Verify that a user can create a new community forum post",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/community/posts",
                "body": {
                    "title": "New Discussion",
                    "content": "Hello, community!"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to create a post without required fields",
                "description": "Verify that the API rejects creating a post without required fields",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/community/posts",
                "body": {
                    "content": "Hello, community!"
                },
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Community Forum Posts",
            "method": "GET",
            "url": "https://api.example.com/v1/community/posts",
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve community forum posts",
                "description": "Verify that community forum posts can be retrieved",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/community/posts",
                "expected_status": true
            },
            {
                "test_case_name": "Retrieve posts with pagination",
                "description": "Verify that posts can be retrieved with pagination",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/community/posts?limit=10&page=1",
                "expected_status": true
            }
        ]
    },
    {
        "input": {
            "name": "Create a Community Forum Comment",
            "method": "POST",
            "url": "https://api.example.com/v1/community/posts/{post_id}/comments",
            "body": {
                "content": "Great discussion!"
            },
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/json"
                },
                {
                    "key": "Authorization",
                    "value": "Bearer user_token"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully create a community forum comment",
                "description": "Verify that a user can create a new community forum comment",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/community/posts/123/comments",
                "body": {
                    "content": "Great discussion!"
                },
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to create a comment without content",
                "description": "Verify that the API rejects creating a comment without content",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer user_token"
                    }
                ],
                "url": "https://api.example.com/v1/community/posts/123/comments",
                "body": {},
                "expected_status": false
            }
        ]
    },
    {
        "input": {
            "name": "Get Community Forum Comments",
            "method": "GET",
            "url": "https://api.example.com/v1/community/posts/{post_id}/comments",
            "headers": [
                {
                    "key": "Accept",
                    "value": "application/json"
                }
            ]
        },
        "output": [
            {
                "test_case_name": "Successfully retrieve community forum comments",
                "description": "Verify that community forum comments can be retrieved",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/community/posts/123/comments",
                "expected_status": true
            },
            {
                "test_case_name": "Attempt to retrieve comments for non-existent post",
                "description": "Verify that the API returns an error for a non-existent post",
                "method": "GET",
                "headers": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "url": "https://api.example.com/v1/community/posts/99999/comments",
                "expected_status": false
            }
        ]
    }
]